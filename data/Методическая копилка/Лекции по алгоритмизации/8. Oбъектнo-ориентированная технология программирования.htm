<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:m="http://schemas.microsoft.com/office/2004/12/omml"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 12">
<meta name=Originator content="Microsoft Word 12">
<link rel=File-List
href="8.%20Oбъектнo-ориентированная%20технология%20программирования.files/filelist.xml">
<link rel=Edit-Time-Data
href="8.%20Oбъектнo-ориентированная%20технология%20программирования.files/editdata.mso">
<link rel=OLE-Object-Data
href="8.%20Oбъектнo-ориентированная%20технология%20программирования.files/oledata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>O???KTHO ??????????????? ?????????? ????????????????</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>????????? ?.?.</o:Author>
  <o:Template>BOOC.DOT</o:Template>
  <o:LastAuthor>Kvant</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>614</o:TotalTime>
  <o:LastPrinted>1996-10-10T20:29:00Z</o:LastPrinted>
  <o:Created>2011-06-23T01:18:00Z</o:Created>
  <o:LastSaved>2011-06-23T01:18:00Z</o:LastSaved>
  <o:Pages>3</o:Pages>
  <o:Words>12866</o:Words>
  <o:Characters>73341</o:Characters>
  <o:Company>Unknown Organization</o:Company>
  <o:Lines>611</o:Lines>
  <o:Paragraphs>172</o:Paragraphs>
  <o:CharactersWithSpaces>86035</o:CharactersWithSpaces>
  <o:Version>12.00</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<link rel=themeData
href="8.%20Oбъектнo-ориентированная%20технология%20программирования.files/themedata.thmx">
<link rel=colorSchemeMapping
href="8.%20Oбъектнo-ориентированная%20технология%20программирования.files/colorschememapping.xml">
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:TrackMoves>false</w:TrackMoves>
  <w:TrackFormatting/>
  <w:AutoHyphenation/>
  <w:HyphenationZone>17</w:HyphenationZone>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DoNotPromoteQF/>
  <w:LidThemeOther>RU</w:LidThemeOther>
  <w:LidThemeAsian>X-NONE</w:LidThemeAsian>
  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>
  <w:Compatibility>
   <w:UsePrinterMetrics/>
   <w:WW6BorderRules/>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
   <w:UseWord97LineBreakingRules/>
   <w:SelectEntireFieldWithStartOrEnd/>
   <w:UseWord2002TableStyleRules/>
   <w:DontUseIndentAsNumberingTabStop/>
   <w:FELineBreak11/>
   <w:WW11IndentRules/>
   <w:DontAutofitConstrainedTables/>
   <w:AutofitLikeWW11/>
   <w:UnderlineTabInNumList/>
   <w:HangulWidthLikeWW11/>
   <w:UseNormalStyleForList/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
  <m:mathPr>
   <m:mathFont m:val="Cambria Math"/>
   <m:brkBin m:val="before"/>
   <m:brkBinSub m:val="--"/>
   <m:smallFrac m:val="off"/>
   <m:dispDef/>
   <m:lMargin m:val="0"/>
   <m:rMargin m:val="0"/>
   <m:defJc m:val="centerGroup"/>
   <m:wrapIndent m:val="1440"/>
   <m:intLim m:val="subSup"/>
   <m:naryLim m:val="undOvr"/>
  </m:mathPr></w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" DefUnhideWhenUsed="true"
  DefSemiHidden="true" DefQFormat="false" DefPriority="99"
  LatentStyleCount="267">
  <w:LsdException Locked="false" Priority="0" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Normal"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="heading 1"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 2"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 3"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 4"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 5"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 6"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 7"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 8"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 9"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 1"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 2"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 3"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 4"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 5"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 6"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 7"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 8"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 9"/>
  <w:LsdException Locked="false" Priority="35" QFormat="true" Name="caption"/>
  <w:LsdException Locked="false" Priority="10" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Title"/>
  <w:LsdException Locked="false" Priority="0" Name="Default Paragraph Font"/>
  <w:LsdException Locked="false" Priority="11" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtitle"/>
  <w:LsdException Locked="false" Priority="22" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Strong"/>
  <w:LsdException Locked="false" Priority="20" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Emphasis"/>
  <w:LsdException Locked="false" Priority="59" SemiHidden="false"
   UnhideWhenUsed="false" Name="Table Grid"/>
  <w:LsdException Locked="false" UnhideWhenUsed="false" Name="Placeholder Text"/>
  <w:LsdException Locked="false" Priority="1" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="No Spacing"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 1"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 1"/>
  <w:LsdException Locked="false" UnhideWhenUsed="false" Name="Revision"/>
  <w:LsdException Locked="false" Priority="34" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="List Paragraph"/>
  <w:LsdException Locked="false" Priority="29" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Quote"/>
  <w:LsdException Locked="false" Priority="30" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Quote"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 1"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 1"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 2"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 2"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 2"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 3"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 3"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 3"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 4"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 4"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 4"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 5"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 5"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 5"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 6"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 6"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 6"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="19" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtle Emphasis"/>
  <w:LsdException Locked="false" Priority="21" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Emphasis"/>
  <w:LsdException Locked="false" Priority="31" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtle Reference"/>
  <w:LsdException Locked="false" Priority="32" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Reference"/>
  <w:LsdException Locked="false" Priority="33" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Book Title"/>
  <w:LsdException Locked="false" Priority="37" Name="Bibliography"/>
  <w:LsdException Locked="false" Priority="39" QFormat="true" Name="TOC Heading"/>
 </w:LatentStyles>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;
	mso-font-charset:204;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-1610611985 1107304683 0 0 415 0;}
@font-face
	{font-family:Baltica;
	mso-font-alt:Arial;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:1 0 0 0 5 0;}
@font-face
	{font-family:"CG Times";
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-alt:"Times New Roman";
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-format:other;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:21.25pt;
	mso-pagination:widow-orphan;
	font-size:9.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Baltica","sans-serif";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
h1
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	text-align:justify;
	text-indent:21.25pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial","sans-serif";
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:14.0pt;
	mso-bidi-font-weight:normal;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{mso-style-noshow:yes;
	mso-style-unhide:no;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:21.25pt;
	mso-pagination:widow-orphan;
	tab-stops:center 207.65pt right 415.3pt;
	font-size:9.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Baltica","sans-serif";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{mso-style-noshow:yes;
	mso-style-unhide:no;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:21.25pt;
	mso-pagination:widow-orphan;
	tab-stops:center 207.65pt right 415.3pt;
	font-size:9.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Baltica","sans-serif";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.namb, li.namb, div.namb
	{mso-style-name:"namb\.";
	mso-style-unhide:no;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:21.25pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:0cm;
	mso-pagination:widow-orphan;
	font-size:9.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Baltica","sans-serif";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.remarc, li.remarc, div.remarc
	{mso-style-name:remarc;
	mso-style-unhide:no;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:21.25pt;
	mso-pagination:widow-orphan;
	background:#E5E5E5;
	mso-shading:windowtext;
	mso-pattern:gray-10 auto;
	font-size:8.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Baltica","sans-serif";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-style:italic;
	mso-bidi-font-style:normal;}
p.bulet, li.bulet, div.bulet
	{mso-style-name:bulet;
	mso-style-unhide:no;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:0cm;
	mso-pagination:widow-orphan;
	font-size:9.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Baltica","sans-serif";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	mso-ansi-language:EN-US;}
p.spase, li.spase, div.spase
	{mso-style-name:spase;
	mso-style-unhide:no;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:21.25pt;
	line-height:50%;
	mso-pagination:widow-orphan;
	font-size:9.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Baltica","sans-serif";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
.MsoChpDefault
	{mso-style-type:export-only;
	mso-default-props:yes;
	mso-ascii-font-family:"CG Times";
	mso-hansi-font-family:"CG Times";}
 /* Page Definitions */
 @page
	{mso-mirror-margins:yes;
	mso-footnote-separator:url("8.%20Oбъектнo-ориентированная%20технология%20программирования.files/header.htm") fs;
	mso-footnote-continuation-separator:url("8.%20Oбъектнo-ориентированная%20технология%20программирования.files/header.htm") fcs;
	mso-endnote-separator:url("8.%20Oбъектнo-ориентированная%20технология%20программирования.files/header.htm") es;
	mso-endnote-continuation-separator:url("8.%20Oбъектнo-ориентированная%20технология%20программирования.files/header.htm") ecs;
	mso-facing-pages:yes;}
@page Section1
	{size:21.0cm 842.0pt;
	margin:1.0cm 1.0cm 42.55pt 42.55pt;
	mso-header-margin:1.0cm;
	mso-footer-margin:42.55pt;
	mso-page-numbers:207;
	mso-even-header:url("8.%20Oбъектнo-ориентированная%20технология%20программирования.files/header.htm") eh1;
	mso-header:url("8.%20Oбъектнo-ориентированная%20технология%20программирования.files/header.htm") h1;
	mso-even-footer:url("8.%20Oбъектнo-ориентированная%20технология%20программирования.files/header.htm") ef1;
	mso-footer:url("8.%20Oбъектнo-ориентированная%20технология%20программирования.files/header.htm") f1;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:-2;
	mso-list-type:simple;
	mso-list-template-ids:-1;}
@list l0:level1
	{mso-level-start-at:0;
	mso-level-text:*;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	margin-left:0cm;
	text-indent:0cm;}
@list l1
	{mso-list-id:900675352;
	mso-list-type:simple;
	mso-list-template-ids:-1396120456;}
@list l1:level1
	{mso-level-start-at:5;
	mso-level-text:"8\.%1\. ";
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	mso-level-legacy:yes;
	mso-level-legacy-indent:14.15pt;
	mso-level-legacy-space:0cm;
	margin-left:35.4pt;
	text-indent:-14.15pt;
	mso-ansi-font-size:9.0pt;
	font-family:"Baltica","sans-serif";
	mso-ansi-font-weight:bold;
	mso-ansi-font-style:normal;
	text-decoration:none;
	text-underline:none;}
@list l2
	{mso-list-id:1204634486;
	mso-list-type:simple;
	mso-list-template-ids:-1391944378;}
@list l2:level1
	{mso-level-tab-stop:none;
	mso-level-number-position:left;
	mso-level-legacy:yes;
	mso-level-legacy-indent:0cm;
	mso-level-legacy-space:2.85pt;
	margin-left:21.25pt;
	text-indent:0cm;
	mso-ansi-font-weight:normal;
	mso-ansi-font-style:italic;}
@list l3
	{mso-list-id:2041735027;
	mso-list-type:simple;
	mso-list-template-ids:-222890946;}
@list l3:level1
	{mso-level-start-at:3;
	mso-level-text:"8\.%1\. ";
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	mso-level-legacy:yes;
	mso-level-legacy-indent:14.15pt;
	mso-level-legacy-space:0cm;
	margin-left:35.4pt;
	text-indent:-14.15pt;
	mso-ansi-font-size:9.0pt;
	font-family:"Baltica","sans-serif";
	mso-ansi-font-weight:bold;
	mso-ansi-font-style:normal;
	text-decoration:none;
	text-underline:none;}
@list l4
	{mso-list-id:2098213565;
	mso-list-type:simple;
	mso-list-template-ids:2033775096;}
@list l4:level1
	{mso-level-start-at:4;
	mso-level-text:"8\.%1\. ";
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	mso-level-legacy:yes;
	mso-level-legacy-indent:14.15pt;
	mso-level-legacy-space:0cm;
	margin-left:35.4pt;
	text-indent:-14.15pt;
	mso-ansi-font-size:9.0pt;
	font-family:"Baltica","sans-serif";
	mso-ansi-font-weight:bold;
	mso-ansi-font-style:normal;
	text-decoration:none;
	text-underline:none;}
@list l0:level1 lfo1
	{mso-level-start-at:1;
	mso-level-number-format:bullet;
	mso-level-numbering:continue;
	mso-level-text:\F06E;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	mso-level-legacy:yes;
	mso-level-legacy-indent:0cm;
	mso-level-legacy-space:5.65pt;
	margin-left:0cm;
	text-indent:0cm;
	mso-ansi-font-size:7.0pt;
	font-family:Wingdings;}
@list l2:level1 lfo4
	{mso-level-numbering:continue;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	mso-level-legacy:yes;
	mso-level-legacy-indent:0cm;
	mso-level-legacy-space:2.85pt;
	margin-left:21.25pt;
	text-indent:0cm;
	mso-ansi-font-weight:normal;
	mso-ansi-font-style:italic;}
@list l2:level1 lfo5
	{mso-level-numbering:continue;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	mso-level-legacy:yes;
	mso-level-legacy-indent:0cm;
	mso-level-legacy-space:2.85pt;
	margin-left:21.25pt;
	text-indent:0cm;
	mso-ansi-font-weight:normal;
	mso-ansi-font-style:italic;}
@list l2:level1 lfo6
	{mso-level-numbering:continue;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	mso-level-legacy:yes;
	mso-level-legacy-indent:0cm;
	mso-level-legacy-space:2.85pt;
	margin-left:21.25pt;
	text-indent:0cm;
	mso-ansi-font-weight:normal;
	mso-ansi-font-style:italic;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Обычная таблица";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"CG Times","serif";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="2050"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=RU style='tab-interval:35.4pt'>

<div class=Section1>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt;color:black'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt;color:black;letter-spacing:
-.2pt'>8. O</span></b><b style='mso-bidi-font-weight:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt;letter-spacing:-.2pt'>БЪЕ<span
style='color:black'>KТНO</span></span></b><span style='font-size:8.0pt;
mso-bidi-font-size:10.0pt;color:black;letter-spacing:-.2pt'>-</span><b
style='mso-bidi-font-weight:normal'><span style='font-size:8.0pt;mso-bidi-font-size:
10.0pt;letter-spacing:-.2pt'>ОРИЕНТИРОВАННАЯ ТЕХНОЛОГИЯ ПРОГРАММИРОВАНИЯ<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt;color:black'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><span style='color:black'>8.1 Проц</span>едур<span style='color:black'>ный
</span>тип данных<o:p></o:p></b></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:.2pt;margin-bottom:0cm;
margin-left:3.35pt;margin-bottom:.0001pt'>Как уже упоминалось, версии языка,
разрабатываемые фирмой <i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>Borland</span></i> по отношению к Стандарту<span
style='font-family:"Times New Roman","serif"'>,</span> содержат ряд расширений.
Рассмотренные ранее расширения, включая средства модульного конструирования
программ, тип указателя (<i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'>pointer</span></i>) и строковый тип
(<i style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>s</span>tring</i>) можно отнести к таким, которые в целом не изменяют
основных концепций авторской версии языка.</p>

<p class=MsoNormal style='margin-top:0cm;margin-right:.2pt;margin-bottom:0cm;
margin-left:3.35pt;margin-bottom:.0001pt'>Введение в средства языка, начиная с
пятой версии <i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>Borland</span><span lang=EN-US> </span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>Pascal</span></i>, процедурного типа данных следует отнести к существенным
расширениям. Этот тип выходит за рамки первоначальной концепции данных и
позволяет интерпретировать процедуры<span style='color:black'> </span>и функции
как объекты, которые можно использовать при определении<span style='color:black'>
</span>переменных и передаче параметров. Значениями процедурного типа являются
целые числа в диапазоне, который соответствует значениям адресов <i
style='mso-bidi-font-style:normal'>вызова</i> процедур и функций (точнее
области памяти, в которой предусмотрено их размещение), а также значение <i
style='mso-bidi-font-style:normal'>nil</i>. Поэтому для данных процедурного типа
определение кардинального числа теряет смысл, а какие либо операции над данными
этого типа кроме операции присваивания недопустимы.</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=remarc><span style='letter-spacing:-.2pt'>Введение абстракции
процедурного типа в первую очередь связано с дальнейшим расширением языка
средствами поддержки объектно-ориентированной технологии программирования.
Кроме того, процедурный тип позволяет упростить механизм передачи параметров в
процедуру (функцию),<span style='mso-spacerun:yes'>  </span>если эти параметры
сами являются процедурами или функциями и в некоторых случаях имеет самостоятельное
применение.<o:p></o:p></span></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:3.1pt;margin-bottom:0cm;
margin-left:1.4pt;margin-bottom:.0001pt'>Описание процедурного типа выполняется
в разделе типов, т. е. соответствует принятому синтаксису языка, например:</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>type <o:p></o:p></span></i></b></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>Proc=<b style='mso-bidi-font-weight:normal'>procedure</b>;<o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>SwapProc=<b style='mso-bidi-font-weight:normal'>procedure</b>(<b
style='mso-bidi-font-weight:normal'>var</b> X,Y : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>StrProc=<b style='mso-bidi-font-weight:normal'>procedure</b>(Str
: String); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='color:black;mso-ansi-language:EN-US'>ReadProc =
</span></i><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure (<b style='mso-bidi-font-weight:normal'>var</b>
<span style='color:black'>S : </span>String);<o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>MathFunc=<b style='mso-bidi-font-weight:normal'>function</b>(X
: Real) : Real; <o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>DeviceFunc=<b style='mso-bidi-font-weight:normal'>function</b>(var
F : Text) : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>MaxFunc=<b style='mso-bidi-font-weight:normal'>function</b>(A,B
: Real; F: MathFunc) : Real; <o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:3.35pt;margin-bottom:
0cm;margin-left:.2pt;margin-bottom:.0001pt'>Как видно из примеров, в описании
процедурного типа использу­ются зарезервированные слова <i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>p</span>rocedure</i> и<i
style='mso-bidi-font-style:normal'> </i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'>f</span>unction</i> и <span
style='color:black'>приво</span>ди<span style='color:black'>тся </span>полное
описание параметров, а в случае функции указываются и тип результата. Иными
словами, син­таксис описания процедурного типа соответствует синтакси­су
обычного заголовка процедуры либо функции с той лишь <span style='color:black'>разницей,
</span>что опускается их имя. Имена формальных параметров при этом так же иг­рают
играют чисто символическую роль и присутствуют в описании только для указания
их количества и типа. Таким образом<span style='color:black'>:<o:p></o:p></span></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:3.35pt;margin-bottom:
0cm;margin-left:.2pt;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt;color:black'>&lt;процедурный
тип&gt;<span style='mso-spacerun:yes'>   </span>::=</span></i><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt;color:black'> </span><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:8.0pt;mso-bidi-font-size:10.0pt;mso-ansi-language:
EN-US'>p</span></i></b><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'><span style='font-size:8.0pt;mso-bidi-font-size:
10.0pt'>rocedure</span></i></b><i style='mso-bidi-font-style:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt'>(&lt;список<span
style='mso-spacerun:yes'>  </span>формальных параметров&gt;)</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:8.0pt;
mso-bidi-font-size:10.0pt;font-family:Symbol;mso-ascii-font-family:Baltica;
mso-hansi-font-family:Baltica;mso-ansi-language:EN-US;mso-char-type:symbol;
mso-symbol-font-family:Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:
Symbol'>&divide;</span></span></i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:8.0pt;mso-bidi-font-size:10.0pt'> </span></i><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt'><o:p></o:p></span></i></b></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:3.35pt;margin-bottom:
0cm;margin-left:.2pt;margin-bottom:.0001pt'><span style='font-size:8.0pt;
mso-bidi-font-size:10.0pt;color:black'><span
style='mso-spacerun:yes'>                                     </span><span
style='mso-spacerun:yes'>  </span></span><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'><span style='font-size:8.0pt;mso-bidi-font-size:
10.0pt'>function</span></i></b><i style='mso-bidi-font-style:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt'>(&lt;список формальных
параметров&gt;) : &lt;тип&gt;<o:p></o:p></span></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:3.35pt;margin-bottom:
0cm;margin-left:.2pt;margin-bottom:.0001pt'>В приведенном выше примере при
описании типа <i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>M</span>ax</i><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>F</span>unc </i>в
качестве параметра используется <span style='color:black'>процедурный тип </span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>M</span>ath</i><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>F</span>unc</i><span style='color:black'>.<o:p></o:p></span></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=remarc><span style='color:black'>Здесь же с</span>ледует<span
style='color:black'> </span>отметить некоторые ограничения. В частности,<span
style='mso-spacerun:yes'>  </span>запрещено определять функции, <span
style='color:black'>возвращающие </span>значение процедурного<span
style='color:black'> </span>типа. Вложенные процедуры и функции (определенные
внутри другой процедуры или функции) не могут использоваться в качестве
переменных процедурного типа вне области их действия. </p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Определив процедурный тип, в программах можно использовать
так называемые <i style='mso-bidi-font-style:normal'>процедурные<span
style='color:black'> </span>переменные</i>:<b style='mso-bidi-font-weight:normal'>
<o:p></o:p></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>var<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>P : SwapProc;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>F</span>: </i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>M</span>ath</i><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>F</span>unc; <o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Переменные процедурного типа можно инициализировать
идентифика­тором процедуры или функции совместимого типа или присваивать им
значения дру­гих переменных того же типа. При обращении к такой переменной
происходит выполнение соответствующей ей процедуры<span style='color:black'> </span>или
функции, например: </p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>type</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>SwapProc = <b
style='mso-bidi-font-weight:normal'>procedure</b>(var X, Y : Integer);<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>MathFunc = <b
style='mso-bidi-font-weight:normal'>function</b>(A,B : Real);<o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>var <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>P: SwapProc;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>F: MathFunc; <o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>procedure</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Swap(var A,B :<b style='mso-bidi-font-weight:normal'> </b>Integer); <b
style='mso-bidi-font-weight:normal'>far</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>var</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Buf :<b
style='mso-bidi-font-weight:normal'> integer</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Buf := a;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>A := B;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>B := Buf; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>; {Swap}<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Tan(Angle : <b
style='mso-bidi-font-weight:normal'>real</b>);<b style='mso-bidi-font-weight:
normal'> far</b>;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Tan := Sin(Angle) /
Cos(Angle);<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>; {Tan}<o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>. . .<o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>P := Swap; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>F := Tan; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>P(I, J);</span></i><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>     
</span><i style='mso-bidi-font-style:normal'>{</i></span>эквивалентно<i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Swap(I, J)} </span></i><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>X</span> :=</i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>F</span>(</i><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>X</span>); {</i>эквивалентно<i
style='mso-bidi-font-style:normal'> </i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'>X</span> :=</i><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>T</span>an(x)}<o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'>. . .<o:p></o:p></i></p>

<p class=MsoNormal><span style='color:black'>Для </span>обеспечения
совместимости по присваиванию процедура либо функция в правой части от знака
присваивания должна удовлетво­рять следующим требованиям:</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:0cm;text-indent:0cm;mso-list:l0 level1 lfo1'><![if !supportLists]><span
style='font-size:7.0pt;mso-bidi-font-size:10.0pt;font-family:Wingdings;
mso-fareast-font-family:Wingdings;mso-bidi-font-family:Wingdings'><span
style='mso-list:Ignore'>n<span style='font:7.0pt "Times New Roman"'> </span></span></span><![endif]>описываться
с директивой far и компилироваться с опцией $f+;</p>

<p class=bulet style='margin-left:0cm;text-indent:0cm;mso-list:l0 level1 lfo1'><![if !supportLists]><span
style='font-size:7.0pt;mso-bidi-font-size:10.0pt;font-family:Wingdings;
mso-fareast-font-family:Wingdings;mso-bidi-font-family:Wingdings;mso-ansi-language:
RU'><span style='mso-list:Ignore'>n<span style='font:7.0pt "Times New Roman"'> </span></span></span><![endif]><span
style='mso-ansi-language:RU'>&iacute;&aring;
&igrave;&icirc;&aelig;&aring;&ograve; &yuml;&acirc;&euml;&yuml;&ograve;&uuml;&ntilde;&yuml;
&ntilde;&ograve;&agrave;&iacute;&auml;&agrave;&eth;&ograve;&iacute;&icirc;&eacute;
&iuml;&eth;&icirc;&ouml;&aring;&auml;&oacute;&eth;&icirc;&eacute;
&egrave;&euml;&egrave; &ocirc;&oacute;&iacute;&ecirc;&ouml;&egrave;&aring;&eacute;
&yuml;&ccedil;&ucirc;&ecirc;&agrave;; <o:p></o:p></span></p>

<p class=bulet style='margin-left:0cm;text-indent:0cm;mso-list:l0 level1 lfo1'><![if !supportLists]><span
style='font-size:7.0pt;mso-bidi-font-size:10.0pt;font-family:Wingdings;
mso-fareast-font-family:Wingdings;mso-bidi-font-family:Wingdings;mso-ansi-language:
RU'><span style='mso-list:Ignore'>n<span style='font:7.0pt "Times New Roman"'> </span></span></span><![endif]><span
style='mso-ansi-language:RU'>&iacute;&aring;
&auml;&icirc;&euml;&aelig;&iacute;&agrave; &aacute;&ucirc;&ograve;&uuml;
&iuml;&eth;&icirc;&ouml;&aring;&auml;&oacute;&eth;&icirc;&eacute;
&ograve;&egrave;&iuml;&agrave; </span><i style='mso-bidi-font-style:normal'><span
lang=EN-US>inline</span></i><span style='mso-ansi-language:RU'>
&egrave;&euml;&egrave; </span><i style='mso-bidi-font-style:normal'><span
lang=EN-US>interrupt</span></i><span style='mso-ansi-language:RU'>, &ograve;.
&aring;.
&iuml;&eth;&aring;&auml;&ntilde;&ograve;&agrave;&acirc;&euml;&yuml;&ograve;&uuml;
&ntilde;&icirc;&aacute;&icirc;&eacute; &ecirc;&icirc;&auml;&icirc;&acirc;&oacute;&thorn;
&acirc;&ntilde;&ograve;&agrave;&acirc;&ecirc;&oacute;. <o:p></o:p></span></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=remarc>Первое из<span style='mso-spacerun:yes'>  </span>этих
ограничений связано с тем, что процедурный тип по представлению совместим с
типом <span lang=EN-US style='mso-ansi-language:EN-US'>p</span>ointer. Переменным
этого типа в версиях<span style='mso-spacerun:yes'>  </span>Borland Pascal <span
style='color:black'>со</span>ответствует адресное пространство в 4 байта
длиной, задающее адрес объекта данных в виде <span style='color:black'>&lt;</span>сегмент&gt;&lt;<span
style='color:black'>смещение&gt;. Д</span>ля пере­менных процедурного типа, как
уже упоминалось, этот адрес указывает на место в памяти, где находится
выполнимый код соответствующей процедуры либо фун­кции. По этой причине при
компиляции программ должна быть ис­пользована, где это необходимо, директива <span
style='color:black'>($f+) </span>для формирования <span style='color:black'>far-</span>адресации
<span style='color:black'>&lt;</span>сегмент&gt;&lt;<span style='color:black'>смещение&gt;
</span>при последующих вызовах объек­тов процедурного типа. То же самое можно
сказать о вложенных в процедурный тип процедурах и функциях, которые при компиляции
располагаются в сегменте памяти машины, зарезервированном под стек, и имеют
near - адресацию. <span style='letter-spacing:-.2pt'>Более подробно с директивами,
управляющими в этом случае процессом трансляции, можно ознакомиться с
помощью<span style='mso-spacerun:yes'>  </span>фирменной документации для
используемой версии системы программирования. <o:p></o:p></span></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-indent:21.3pt'>Чтобы иметь возможность
присваивать переменным процедурного типа значения<span style='color:black'>, </span>представляющие
собой стандартные функции, необхо­димо создавать специальную
&quot;оболочку&quot;. Например, стандартная функция<i style='mso-bidi-font-style:
normal'> sin(x)</i>, взятая в оболочку <i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'>FS</span>in</i> совместима по
присваиванию с описанным выше типом <i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'>M</span>ath</i><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>F</span>unc</i>: </p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> FSin(X : real):<b
style='mso-bidi-font-weight:normal'> </b>Real; far; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>FSin :=sin(X);<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span><b style='mso-bidi-font-weight:normal'>end</b>;
<o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>&Icirc;&aacute;&icirc;&euml;&icirc;&divide;&ecirc;&agrave;
&auml;&euml;&yuml; &iuml;&eth;&icirc;&ouml;&aring;&auml;&oacute;&eth;&ucirc; <i
style='mso-bidi-font-style:normal'><span style='color:black'>Read</span></i><span
style='color:black'> </span></span><span style='color:black'>может</span><span
style='color:black;mso-ansi-language:EN-US'> </span><span style='color:black'>иметь</span><span
style='color:black;mso-ansi-language:EN-US'> </span><span style='color:black'>вид</span><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>:<o:p></o:p></span></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>t</span>уре <o:p></o:p></b></p>

<p class=MsoNormal style='text-indent:21.3pt'><i style='mso-bidi-font-style:
normal'><span style='color:black'><span style='mso-spacerun:yes'> </span>($f+)
{заменяет директиву </span></i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>far</span><span
style='color:black'>}<o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>procedure</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> <span style='color:black'>MyR</span>ead (<b style='mso-bidi-font-weight:
normal'>var</b> <span style='color:black'>S : </span>String); {</span>по</i><i
style='mso-bidi-font-style:normal'><span style='mso-ansi-language:EN-US'> </span>типу</i><i
style='mso-bidi-font-style:normal'><span style='mso-ansi-language:EN-US'> </span>совместима</i><i
style='mso-bidi-font-style:normal'><span style='mso-ansi-language:EN-US'> </span>с</i><i
style='mso-bidi-font-style:normal'><span style='mso-ansi-language:EN-US'> <span
lang=EN-US style='color:black'>ReadProc</span><span lang=EN-US>}</span></span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:8.0pt;
mso-bidi-font-size:10.0pt;mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='color:black;mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='color:black;mso-ansi-language:EN-US'>Read
(S);<span style='mso-spacerun:yes'>                                  </span><o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>  </span></span>end</i></b><i style='mso-bidi-font-style:
normal'>; <o:p></o:p></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='color:black'>($f-) <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><i style='mso-bidi-font-style:
normal'>. . .<o:p></o:p></i></p>

<p class=MsoNormal>Выше упоминалось, что переменные процедурного типа совмести­мы
с <span style='color:black'>не типизированными </span>переменными-указателями.
В связи с этим для получения адреса, по которому располагается выполнимый код
процедуры либо функции<span style='color:black'>, </span>являющейся значением
некоторой пере­менной, можно использовать оператор получения адреса<i
style='mso-bidi-font-style:normal'> <span style='color:black'>@</span></i><span
style='color:black'>. Ч</span>тобы получить адрес размещения в памяти самой
переменной процедурного типа, необхо­димо произвести двойное взятие адреса <span
style='color:black'>@@.<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.3pt'>Использование процедурных
переменных, которым при инициализации или по другим причинам было присвоено значение
<i style='mso-bidi-font-style:normal'>nil</i>, совместимое с любым процедурным
типом, приводит к ошибке. Для исключения подобных ошибок обычно используется проверка
вида <i style='mso-bidi-font-style:normal'>if @P &lt;&gt; nil then P(I, J).</i></p>

<p class=MsoNormal>Являясь по сути спецификацией действий, <i style='mso-bidi-font-style:
normal'>по представлению</i> процедурный тип все же соответствует данным, причем
по аналогии представления он может быть сопоставлен с простым типом. <span
style='letter-spacing:-.2pt'>Поэтому на этот тип в пол­ной мере распространяется
возможность его использования в качестве компонент структурных типов. В связи с
этим допустимы следующие описания: <o:p></o:p></span></p>

<p class=MsoNormal style='line-height:13.0pt;mso-line-height-rule:exactly'><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'>t</span>уре</i></b><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:1.0cm;line-height:13.0pt;mso-line-height-rule:
exactly'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='color:black;mso-ansi-language:EN-US'>MyP</span></i><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>roc =<b
style='mso-bidi-font-weight:normal'>procedure</b> <span style='color:black'>(X,Y
: </span>Byte);<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm;line-height:13.0pt;mso-line-height-rule:
exactly'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='color:black;mso-ansi-language:EN-US'>Ref= </span></i><span lang=EN-US
style='mso-ansi-language:EN-US'>^<i style='mso-bidi-font-style:normal'>Node;<o:p></o:p></i></span></p>

<p class=MsoNormal style='text-indent:1.0cm;line-height:13.0pt;mso-line-height-rule:
exactly'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>Node <span style='color:black'>=</span><b
style='mso-bidi-font-weight:normal'>record<o:p></o:p></b></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt;line-height:13.0pt;mso-line-height-rule:
exactly'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='color:black;mso-ansi-language:EN-US'>K.Y : </span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>Byte; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt;line-height:13.0pt;mso-line-height-rule:
exactly'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='color:black;mso-ansi-language:EN-US'>IsVisible : </span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>Boolean; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt;line-height:13.0pt;mso-line-height-rule:
exactly'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='color:black;mso-ansi-language:EN-US'>DrawProc : MyProc; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt;line-height:13.0pt;mso-line-height-rule:
exactly'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>Next : <span style='color:black'>Ref<o:p></o:p></span></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt;line-height:13.0pt;mso-line-height-rule:
exactly'><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>end</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm;line-height:13.0pt;mso-line-height-rule:
exactly'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='color:black;mso-ansi-language:EN-US'>NodeArray = </span></i><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'>array</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> <span style='color:black'>[1..5] </span><b style='mso-bidi-font-weight:
normal'>of <span style='color:black'>ref</span></b><span style='color:black'>; <o:p></o:p></span></span></i></p>

<p class=MsoNormal style='line-height:13.0pt;mso-line-height-rule:exactly'><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>var<o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:1.0cm;line-height:13.0pt;mso-line-height-rule:
exactly'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='color:black;mso-ansi-language:EN-US'>N : </span></i><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Node;<b
style='mso-bidi-font-weight:normal'><span style='color:black'><o:p></o:p></span></b></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='color:black;mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>NA</span><span style='color:black'> : </span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='color:black;
mso-ansi-language:EN-US'>N</span><span style='color:black'>ode</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='color:black;
mso-ansi-language:EN-US'>A</span><span style='color:black'>rray;<o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='color:black'><span style='mso-spacerun:yes'> </span></span>. . .<o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Приведенное описание типов и переменных соответствует
некоторой динамической структуре (линейному списку), ссылки на элементы которой
“собраны” в массив <i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>NA</span>. </i>При таком описании возможны
обращения вида:</p>

<p class=spase><span style='mso-spacerun:yes'> </span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='color:black;mso-ansi-language:EN-US'>N.DrawProc(1,5); <o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='color:black;mso-ansi-language:EN-US'>NA[4]^.DrawProc(6, </span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>2);<o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:0cm'>и т. п., которые в определенной мере
ограничивают присущую языку Паскаль ясность построения программ.<span
style='letter-spacing:-.2pt'> Однако подобные обращения считаются одним из
профессиональных достоинств языков, ориентированных на объектно-ориентированную
технологию программирования (например <i style='mso-bidi-font-style:normal'>С<sup>++</sup></i>),
реализация которой<span style='mso-spacerun:yes'>  </span>была бы не­возможна
без введения понятия процедурного типа. <o:p></o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>8.2. Особенности
объектно-ориентированной технологии<o:p></o:p></b></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Мнение подавляющего большинства программистов об <i
style='mso-bidi-font-style:normal'>О</i>бъектно-<i style='mso-bidi-font-style:
normal'>О</i>ри-ентированном <i style='mso-bidi-font-style:normal'>П</i>рограммиро­вании
(ООП) сводится к тому, что это совершенно новый подход к технологии програм­мирования
основанный на методологии, которая обеспечивает более высо­кие уровни
абстракции и модульности, а также требует от привыкших к стандартному “процедурному”
мышлению на Паскале “забыть” приобретенные навыки. Такое мнение справедливо
только до определенной степени. Во-первых, эта технология применима не ко всему
спектру прикладных задач и, во-вторых, ее элементы достаточно широко
используются в рамках процедурного программирования при решении задач в
некоторых предметных областях (модели-ровании дискретных систем, защита данных
и др.). И, если первая часть утверждения о новизне подхода в общем справедлива,
то вместо слова “забыть” следует говорить скорее о приобретении новых навыков
при использовании средств объектно-ориентированной технологии.</p>

<p class=MsoNormal>Первые идеи ООП были намечены и реализованы в языке <i
style='mso-bidi-font-style:normal'>SIMULA 67</i> (сокращенное от <i
style='mso-bidi-font-style:normal'>SIMUlation</i> <i style='mso-bidi-font-style:
normal'>LAnguage</i> – язык моделирования, 67 – год версии) и существенно
развиты в объектно-ориентированных языках <i style='mso-bidi-font-style:normal'>SmallTalk</i>
и<span style='color:black'> <i style='mso-bidi-font-style:normal'>C<sup>++</sup></i>.
</span>Благодаря последним, идеи ООП получили вполне конкрет­ную реализацию.
Однако сегодня еще рано говорить о создании определенного языкового стандарта
для ООП. Это по-прежнему скорее конгломерат идей, наиболее полное изложение
которых можно найти в [3]. Средства <span style='color:black'>поддержки </span>ООП
органично вписались в легкую и доступную структуру языка<span style='color:
black'> <i style='mso-bidi-font-style:normal'>ТцгЬо </i></span><i
style='mso-bidi-font-style:normal'>Pascal</i> версии 5.5 и более поздних версий
фирмы <i style='mso-bidi-font-style:normal'>Borland</i> и строились с использованием
уже имеющегося опыта введения таких средств в язык<span style='color:black'> <i
style='mso-bidi-font-style:normal'>C</i>.<o:p></o:p></span></p>

<p class=MsoNormal>Как следует из самого названия, ключевым поняти­ем ООП
является <i style='mso-bidi-font-style:normal'>объект (object)</i>. Объект
часто называют <i style='mso-bidi-font-style:normal'>классом</i>. Это понятие<span
style='mso-spacerun:yes'>  </span>характеризуется тремя основными свойствами:</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=bulet style='margin-left:0cm;text-indent:0cm;mso-list:l0 level1 lfo1'><![if !supportLists]><span
style='font-size:7.0pt;mso-bidi-font-size:10.0pt;font-family:Wingdings;
mso-fareast-font-family:Wingdings;mso-bidi-font-family:Wingdings;mso-ansi-language:
RU'><span style='mso-list:Ignore'>n<span style='font:7.0pt "Times New Roman"'> </span></span></span><![endif]><b
style='mso-bidi-font-weight:normal'><span style='mso-ansi-language:RU'>&egrave;</span></b><i
style='mso-bidi-font-style:normal'><span style='mso-ansi-language:RU'>&iacute;&ecirc;&agrave;&iuml;&ntilde;&oacute;&euml;&yuml;&ouml;&egrave;&yuml;
– </span></i><span style='mso-ansi-language:RU'>&iuml;&eth;&aring;&auml;&ntilde;&ograve;&agrave;&acirc;&euml;&aring;&iacute;&egrave;&aring;
&acirc; &aring;&auml;&egrave;&iacute;&icirc;&eacute;
“&icirc;&aacute;&icirc;&euml;&icirc;&divide;&ecirc;&aring;”
(&ecirc;&agrave;&iuml;&ntilde;&oacute;&euml;&aring;)
&auml;&agrave;&iacute;&iacute;&ucirc;&otilde; &ntilde;
&iuml;&eth;&icirc;&ouml;&aring;&auml;&oacute;&eth;&agrave;&igrave;&egrave;
&egrave; &ocirc;&oacute;&iacute;&ecirc;&ouml;&egrave;&yuml;&igrave;&egrave;,
&ecirc;&icirc;&ograve;&icirc;&eth;&ucirc;&aring; &acirc;
&auml;&agrave;&euml;&uuml;&iacute;&aring;&eacute;&oslash;&aring;&igrave;
&iacute;&agrave;&ccedil;&ucirc;&acirc;&agrave;&thorn;&ograve;&ntilde;&yuml;<span
style='mso-spacerun:yes'>  </span><i style='mso-bidi-font-style:normal'>&igrave;&aring;&ograve;&icirc;&auml;а&igrave;&egrave;</i>
&egrave;
&igrave;&agrave;&iacute;&egrave;&iuml;&oacute;&euml;&egrave;&eth;&oacute;&thorn;&ograve;
&yacute;&ograve;&egrave;&igrave;&egrave; и только этими данными;<o:p></o:p></span></p>

<p class=bulet style='margin-left:0cm;text-indent:0cm;mso-list:l0 level1 lfo1'><![if !supportLists]><span
style='font-size:7.0pt;mso-bidi-font-size:10.0pt;font-family:Wingdings;
mso-fareast-font-family:Wingdings;mso-bidi-font-family:Wingdings;letter-spacing:
-.2pt;mso-ansi-language:RU'><span style='mso-list:Ignore'>n<span
style='font:7.0pt "Times New Roman"'> </span></span></span><![endif]><i
style='mso-bidi-font-style:normal'><span style='mso-ansi-language:RU'>&iacute;&agrave;&ntilde;&euml;&aring;&auml;&icirc;&acirc;&agrave;&iacute;&egrave;&aring;</span></i><span
style='mso-ansi-language:RU'> –
&acirc;&icirc;&ccedil;&igrave;&icirc;&aelig;&iacute;&icirc;&ntilde;&ograve;&uuml;
&icirc;&iuml;&eth;&aring;&auml;&aring;&euml;&aring;&iacute;&egrave;&yuml;
&iacute;&agrave; &icirc;&ntilde;&iacute;&icirc;&acirc;&aring;
&iacute;&aring;&ecirc;&icirc;&ograve;&icirc;&eth;&icirc;&atilde;&icirc;
&eth;&agrave;&iacute;&aring;&aring;
&icirc;&iuml;&eth;&aring;&auml;&aring;&euml;&aring;&iacute;&iacute;&icirc;&atilde;&icirc;
&icirc;&aacute;&uacute;&aring;&ecirc;&ograve;&agrave;
&egrave;&aring;&eth;&agrave;&eth;&otilde;&egrave;&egrave;
&iuml;&eth;&icirc;&egrave;&ccedil;&acirc;&icirc;&auml;&iacute;&ucirc;&otilde;
&icirc;&aacute;&uacute;&aring;&ecirc;&ograve;&icirc;&acirc;,
&ecirc;&agrave;&aelig;&auml;&ucirc;&eacute; &egrave;&ccedil;
&ecirc;&icirc;&ograve;&icirc;&eth;&ucirc;&otilde;
&iacute;&agrave;&ccedil;&ucirc;&acirc;&agrave;&aring;&ograve;&ntilde;&yuml; <i
style='mso-bidi-font-style:normal'>&iuml;&icirc;&ograve;&icirc;&igrave;&ecirc;&icirc;&igrave;</i>
&egrave; &iacute;&agrave;&ntilde;&euml;&aring;&auml;&oacute;&aring;&ograve;
&auml;&icirc;&ntilde;&ograve;&oacute;&iuml; &ecirc;
&auml;&agrave;&iacute;&iacute;&ucirc;&igrave; &egrave;&euml;&egrave;
&igrave;&aring;&ograve;&icirc;&auml;&ucirc; &ntilde;&acirc;&icirc;&egrave;&otilde;
<i style='mso-bidi-font-style:normal'>&iuml;&eth;&agrave;&eth;&icirc;&auml;&egrave;&ograve;&aring;&euml;&aring;&eacute;
(&iuml;&eth;&aring;&auml;&ecirc;&icirc;&acirc;)</i>; &iuml;&eth;&egrave;
&yacute;&ograve;&icirc;&igrave;
&iacute;&agrave;&ntilde;&euml;&aring;&auml;&icirc;&acirc;&agrave;&iacute;&egrave;&aring;
&ograve;&eth;&agrave;&iacute;&ccedil;&egrave;&ograve;&egrave;&acirc;&iacute;&icirc;,
<span style='letter-spacing:-.2pt'>&ograve;. &aring;.
&aring;&ntilde;&euml;&egrave; &icirc;&aacute;&uacute;&aring;&ecirc;&ograve; <i
style='mso-bidi-font-style:normal'>&Icirc;<sub>3</sub></i>
&iacute;&agrave;&ntilde;&euml;&aring;&auml;&oacute;&aring;&ograve;
&icirc;&ograve; <i style='mso-bidi-font-style:normal'>&Icirc;<sub>2 </sub></i>,
&agrave; <i style='mso-bidi-font-style:normal'>&Icirc;<sub>2</sub></i>
&iacute;&agrave;&ntilde;&euml;&aring;&auml;&oacute;&aring;&ograve;
&icirc;&ograve; <i style='mso-bidi-font-style:normal'>&Icirc;<sub>1</sub></i>,
&ograve;&icirc; <i style='mso-bidi-font-style:normal'>&Icirc;<sub>3</sub></i><sub>
</sub>&iacute;&agrave;&ntilde;&euml;&aring;&auml;&oacute;&aring;&ograve;
&icirc;&ograve; &Icirc;<i style='mso-bidi-font-style:normal'><sub>1</sub></i>. <o:p></o:p></span></span></p>

<p class=bulet style='margin-left:0cm;text-indent:0cm;mso-list:l0 level1 lfo1'><![if !supportLists]><span
style='font-size:7.0pt;mso-bidi-font-size:10.0pt;font-family:Wingdings;
mso-fareast-font-family:Wingdings;mso-bidi-font-family:Wingdings;mso-ansi-language:
RU'><span style='mso-list:Ignore'>n<span style='font:7.0pt "Times New Roman"'> </span></span></span><![endif]><i
style='mso-bidi-font-style:normal'><span style='mso-ansi-language:RU'>&iuml;&icirc;&euml;&egrave;&igrave;&icirc;&eth;&ocirc;&egrave;&ccedil;&igrave;</span></i><span
style='mso-ansi-language:RU'> –
&iuml;&eth;&egrave;&auml;&agrave;&iacute;&egrave;&aring; действию
(&igrave;&aring;&ograve;&icirc;&auml;&oacute;)
&egrave;&igrave;&aring;&iacute;&egrave;,
&ecirc;&icirc;&ograve;&icirc;&eth;&icirc;&aring;
&ntilde;&icirc;&acirc;&igrave;&aring;&ntilde;&ograve;&iacute;&icirc;
&egrave;&ntilde;&iuml;&icirc;&euml;&uuml;&ccedil;&oacute;&aring;&ograve;&ntilde;&yuml;
&icirc;&aacute;&uacute;&aring;&ecirc;&ograve;&agrave;&igrave;&egrave;
&acirc;&ntilde;&aring;&eacute;
&egrave;&aring;&eth;&agrave;&eth;&otilde;&egrave;&egrave;,
&iuml;&eth;&egrave;&divide;&aring;&igrave;
&ecirc;&agrave;&aelig;&auml;&ucirc;&eacute; объект
&egrave;&aring;&eth;&agrave;&eth;&otilde;&egrave;&egrave; &acirc;
&ntilde;&euml;&oacute;&divide;&agrave;&aring;
&iacute;&aring;&icirc;&aacute;&otilde;&icirc;&auml;&egrave;&igrave;&icirc;&ntilde;&ograve;&egrave;
реализует &yacute;&ograve;&icirc; &auml;&aring;&eacute;&ntilde;&ograve;&acirc;&egrave;&aring;
&ntilde;&acirc;&icirc;&egrave;&igrave;
&ntilde;&icirc;&aacute;&ntilde;&ograve;&acirc;&aring;&iacute;&iacute;&ucirc;&igrave;,
&iuml;&icirc;&auml;&otilde;&icirc;&auml;&yuml;&ugrave;&egrave;&igrave;
&auml;&euml;&yuml; &iacute;&aring;&atilde;&icirc;,
&icirc;&aacute;&eth;&agrave;&ccedil;&icirc;&igrave;.<o:p></o:p></span></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=remarc>Собственно, понятия инкапсуляции и полиморфизма были введены
уже в языке<span style='font-style:normal'> </span>SIMULA. Там же применялось
наследование, хотя и не многократное, и поощрялось скрытие полей данных
(privacy). </p>

<p class=remarc>Впервые версию языка Паскаль, расширенную средствами ООП и
названную Clascal, предложила компания Apple Computer. Следующим шагом этой
компании была разработка версии Object Pascal с участием Н. Вирта. Результаты
их разработки имеют близкое сходство с объектно-ориентированным Borland Pascal.
</p>

<p class=remarc>ООП средства Borland Pascal в свою очередь многим обязаны языку
С<sup>++</sup> (объектно-ориентированному надмножеству языка С). Конструктор и
деструкртор – это понятия С<sup>++</sup>. Подобно этому языку Borland Pascal
предлагает выбор между статичскими и виртуальными методами, а также скрытие
(private) полей и методов. При этом заметно взаимное влияние: введение строгого
контроля типов и ориентация на предопределенные структуры объектов делают язык
С<sup>++</sup> во многом концептуально похожим на Паскаль.<span
style='font-size:9.0pt;mso-bidi-font-size:10.0pt'><o:p></o:p></span></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Объектный тип, подобно процедурному, выходит за рамки
традиционных для языка Паскаль концепций. Применительно к физическим объектам
существующая концепция данных позволяет отразить только количественные (статические)
характеристики физических свойств этих объектов. В то же время любой физический
объект, как правило, характеризуется своим по­ведением в окружающем мире или,
иначе, траекторией в пространстве времени-состояний. Средства, предусмотренные
в языке для реализации <i style='mso-bidi-font-style:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt'>ООП</span></i>, позволяют
сформировать конечную абстракцию объекта, объединяя данные и действия над ними
в рамках единой синтаксической конструкции, и формулировать необходимые для
решения задачи абстракции, количество которых в общем случае ничем не
ограничено. </p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=remarc>Наличие таких возможностей в большей степени присуще
аппликативным языкам, предназначенным для, так называемого, функционального
программирования (язык Норе []).</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Объединение кода (текста программы, который специфицирует
действия) и данных, т. е. инкапсуляция, важны с еще одной точки зрения. Подобно
тому, как основная программа не может “испортить” значения локальных параметров
в вызываемой ею процедуре, при инкапсуляции описанные в рамках объекта действия
применимы только к доступным в <span style='letter-spacing:-.2pt'>этих же
рамках данным и не могут искажаться действиями другого объекта.</span></p>

<p class=MsoNormal>Важным и специфическим свойством средств поддержки ООП
является наследование, т.е. возможность сохранить и использовать при описании
объектов свойства и поведение &quot;объектов-прародителей&quot;. Возможность
наследования, пожалуй, является наиболее существенным различием между <span
style='letter-spacing:-.2pt'>процедурной и объектно-ориентированной
технологиями программирования. <o:p></o:p></span></p>

<p class=MsoNormal>Относительно наследования можно заметить, что в науке
большая часть “работы” при исследовании окружающего мира приходится на по<span
style='letter-spacing:-.2pt'>строение генеалогических деревьев, целью которых
является классификация. </span>Процесс классификации носит название тахономии.
Исследователь, классифицируя новый объект, ставит перед собой задачу
определения сходства этого объекта с другими представителями общего с ним
класса. Каждый отдельный класс имеет набор типов поведения и свойств, которые
характеризуют или определяют этот класс. Тахономия обычно начинается с вершины
генеалогического дерева и продолжается спуском по ветвям. Самые верхние уровни
отражают наиболее общие свойства классов и каждый последующий уровень более
сложен и более конкретен, чем предыдущий. Если некоторое свойство уже определено,
то все подклассы на уровнях <i style='mso-bidi-font-style:normal'>ниже</i>
определения включают это свойство. В таком смысле процесс конструирования
дерева порождений объектов очень напоминает тахономию, поскольку формирование
соответствующих объектам абстракций использует механизм, который позволяет
типам <i style='mso-bidi-font-style:normal'>object</i> наследовать свойства от
более общих и ранее определенных типов.</p>

<p class=MsoNormal>В качестве примера, иллюстрирующего свойство полиморфизма,
можно использовать уже известные и входящие в средства Стандарта языка
процедуры <i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>R</span>ead</i> и <i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>W</span>rite</i>. При
одном и том же имени с помощью этих процедур могут выполняться различные
действия, которые определяются типом их фактических параметров, например: </p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>W</span>rite</i><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>L</span>n(CharVar);
{выводит значение символьного типа} <o:p></o:p></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>W</span>rite</i><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>L</span>n(IntegerVar);
{Выводит значение целого типа} <o:p></o:p></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>W</span>rite</i><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>L</span>n(RealVar);
{Выводит значение числа с плавающей запятой}. <o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>К сожалению, в Стандарте нет средств, которые позволяли бы
создавать свои, столь же гибкие процедуры (оператор <i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>case</span></i> здесь
мало поможет, поскольку селектором варианта в нем является значение метки, а не
тип данных).<span style='mso-spacerun:yes'>   </span></p>

<p class=MsoNormal><span style='mso-spacerun:yes'> </span>Однако средства
поддержки этого свойства в ООП достаточно хорошо “отшлифованы” и в дальнейшем
будут уточняться.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:35.4pt;text-indent:-14.15pt;mso-list:
l3 level1 lfo2'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='mso-fareast-font-family:Baltica;mso-bidi-font-family:Baltica'><span
style='mso-list:Ignore'>8.3. </span></span></b><![endif]><b style='mso-bidi-font-weight:
normal'>Конструкция <i style='mso-bidi-font-style:normal'>object</i><o:p></o:p></b></p>

<p class=spase><span style='mso-spacerun:yes'> </span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>Первое приближение<o:p></o:p></b></p>

<p class=MsoNormal>В первом приближении объект очень похож на запись, которая
рассматривется как оболочка для объединения нескольких взаимосвязанных
элементов данных под одним именем. Так, например можно поместить в одну
оболочку координаты <i style='mso-bidi-font-style:normal'>X</i> и <i
style='mso-bidi-font-style:normal'>Y</i>, задающие позицию на экране
видеомонитора, представив их записью с именем <i style='mso-bidi-font-style:
normal'>Location</i> (место):</p>

<p class=spase><span style='mso-spacerun:yes'> </span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='mso-spacerun:yes'> </span></i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'>Location = <b style='mso-bidi-font-weight:
normal'>record </b><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:3.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>X, Y : Integer;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:78.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>end</i></b><i style='mso-bidi-font-style:
normal'>;<o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Пусть теперь по условию задачи требуется показать световую
точку на экране в позиции, заданной записью <i style='mso-bidi-font-style:normal'>Location</i>.
Для этого тип <i style='mso-bidi-font-style:normal'>Location</i> обеспечивает
достаточную гибкость, которая позволяет рассматривать координаты <i
style='mso-bidi-font-style:normal'>X</i> и <i style='mso-bidi-font-style:normal'>Y</i>
раздельно и в то же время воспринимать запись как единое целое, т. е. как
позицию на экране. </p>

<p class=MsoNormal>Используя процедурную технологию, для этого достаточно либо
дополнить тип<i style='mso-bidi-font-style:normal'> Location</i> булевым полем,
определяющим, имеется ли в данной позиции <i style='mso-bidi-font-style:normal'>светящаяся
</i>точка растра:</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='mso-spacerun:yes'> </span></i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'>Location = <b style='mso-bidi-font-weight:
normal'>record </b><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:3.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>X, Y :<b
style='mso-bidi-font-weight:normal'> </b>Integer;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:3.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible :<b
style='mso-bidi-font-weight:normal'> </b>Boolean; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:78.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:0cm'>либо, что предпочтительней,
определить новый тип <i style='mso-bidi-font-style:normal'>Point</i> (точка): </p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='mso-spacerun:yes'> </span></i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'>Point = <b style='mso-bidi-font-weight:
normal'>record</b> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Position : Location;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible : Boolean; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>; <o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal>Предпочтение в этом случае обусловлено тем, что отражает
следующий факт: точка – это позиция на экране (<i style='mso-bidi-font-style:
normal'>Location</i>), которая светится. В таком определении точки
“наследуется” местонахождение для этой точки. Однако тип записи по определению
не может наследовать в полном смысле этого слова. При описании переменной типа <i
style='mso-bidi-font-style:normal'>Point</i> вида<i style='mso-bidi-font-style:
normal'> var MyPoint : Point</i> обращение к полям <i style='mso-bidi-font-style:
normal'>X</i> и <i style='mso-bidi-font-style:normal'>Y </i>должно выполняться
с помощью операторов <i style='mso-bidi-font-style:normal'>MyPoint</i> <i
style='mso-bidi-font-style:normal'>.Location.X :=0 </i>и <i style='mso-bidi-font-style:
normal'>MyPoint</i> <i style='mso-bidi-font-style:normal'>.Location.Y :=0</i>,
т. е. требуется явное указание имени переменной-записи, которой они принадлежат
(оператор <i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>with</span></i> здесь принципиально ничего не
изменит)<i style='mso-bidi-font-style:normal'>. </i>Таким образом, являясь
принадлежностью записи <i style='mso-bidi-font-style:normal'>Location,</i> эти
поля<span style='mso-spacerun:yes'>  </span>не могут непосредственно <span
style='letter-spacing:-.2pt'>рассматриваться как поля записи <i
style='mso-bidi-font-style:normal'>Point,</i> хотя в действительности они там
есть.</span><i style='mso-bidi-font-style:normal'><o:p></o:p></i></p>

<p class=MsoNormal>Использование типа <i style='mso-bidi-font-style:normal'>object</i>
при описании таких данных существенно изменяет ситуацию, вводя наследование как
особый вид отношений. Так как все точки должны иметь<i style='mso-bidi-font-style:
normal'> место</i> на экране, можно говорить о том, что тип <i
style='mso-bidi-font-style:normal'>Point</i> является производным типом от типа
<i style='mso-bidi-font-style:normal'>Location</i>. Иначе говоря, тип <i
style='mso-bidi-font-style:normal'>Point</i> непосредственно наследует все
поля, принадлежащие типу <i style='mso-bidi-font-style:normal'>Location</i>, и
дополнительно имеет то новое, что делает <i style='mso-bidi-font-style:normal'>Point</i>
отдельным типом. При этом наследник является производным типом (<i
style='mso-bidi-font-style:normal'>&quot;потомком&quot;</i> – <i
style='mso-bidi-font-style:normal'>immediate descendant, child</i>), а тип, от
которого производится наследование, – прародительским типом (<i
style='mso-bidi-font-style:normal'>“предком”</i> –<i style='mso-bidi-font-style:
normal'> immediate ancestor</i>). Согласно синтаксису этот тип определяется
новым служебным (зарезервированным) словом <i style='mso-bidi-font-style:normal'>object</i>,
после которого в круглых скобках при определении потомков явно указыватся их
непосредственный предок.</p>

<p class=MsoNormal>Для рассмотренного выше примера два взаимосвязанных типа
объектов могут быть определены следующим образом:</p>

<p class=spase><span style='mso-spacerun:yes'>   </span></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Location = <b
style='mso-bidi-font-weight:normal'>object <o:p></o:p></b></span></i></p>

<p class=MsoNormal style='text-indent:3.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>X, Y : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:78.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Point = <b
style='mso-bidi-font-weight:normal'>object </b>(Location) <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible : Boolean;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>; <o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=remarc><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span></span>Здесь следует обратить внимание на<span
style='mso-spacerun:yes'>  </span>обязательную точку с запятой перед<b
style='mso-bidi-font-weight:normal'><span style='font-style:normal'> </span></b>end,<b
style='mso-bidi-font-weight:normal'><span style='font-style:normal'> </span></b>отсутствие
явного упоминания о наличии полей<span style='font-style:normal'> </span>X и Y
при описании типа<span style='font-style:normal'> </span>Point и использование
круглых скобок доля обозначения наследования. Несмотря на то, что поля X и Y
типа Location явно не описаны в типе Point, этот тип их имеет, получив поля
посредством наследования. Поэтому можно говорить о величине поля X типа Point
точно так же, как о величине поля X типа Location.</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>В общем случае процесс такого порождения описаний может
продолжаться неопределенно долго. Так, далее, можно определить производные типы
от типа <i style='mso-bidi-font-style:normal'>Point </i>(например, круг,
квадрат или эллипс), затем потомков этого производного типа (например, кольцо
как два круга, которые вписаны один в другой) и т. д. При этом тип объекта
может иметь <i style='mso-bidi-font-style:normal'>любое количество</i> <span
style='letter-spacing:-.2pt'>непосредственных потомков, но <i style='mso-bidi-font-style:
normal'>только одного</i> непосредственного прародителя.</span> </p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=remarc>Как уже упоминалось, большая часть работы по конструированию
объектно-ориентированных прикладных программ состоит именно в построении
подобной иерархии объектов, отражающей их родословное дерево<span
style='mso-spacerun:yes'>  </span>в предполагаемой программе. Такое дерево часто
называют коллекцией классов.</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Приведенные примеры пока, помимо наследования, иллюстрируют
только то, что конструкция объекта напоминает запись. В действительности
представление об объекте, как о записи, которая может наследовать, далеко не
полностью характеризует тип <i style='mso-bidi-font-style:normal'>object</i>,
но позволяет определить, что собой представляет экземпляр типа.</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=remarc>Обычно по отношению к данным вместо термина
&quot;экземпляр&quot; чаще использовался его синоним – “переменная”. Однако,
применительно к объектам в дальнейшем будет использоваться именно термин
&quot;экземпляр типа&quot;, поскольку он в большей степени соответствует
понятию “объект”. Кроме того, иногда используется понятие “переменная
экземпляра”, соответствующее полю данных объекта.</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>Экземпляры типов
объектов</b> описываются подобно тому, как описываются любые переменные: либо
как статические переменные, либо как <span style='letter-spacing:-.2pt'>указатели
на объекты, распределяемые в динамической области памяти (</span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='letter-spacing:-.2pt;
mso-ansi-language:EN-US'>Heap</span></i><span style='letter-spacing:-.2pt'>):</span>
</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>type<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Location = <b
style='mso-bidi-font-weight:normal'>object <o:p></o:p></b></span></i></p>

<p class=MsoNormal style='text-indent:3.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>X, Y : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:78.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Point = <b
style='mso-bidi-font-weight:normal'>object </b>(Location) <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible : Boolean;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'>PointPtr = ^Point;<span style='mso-spacerun:yes'>  </span><o:p></o:p></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>var</b> </p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='mso-spacerun:yes'> </span>StatPoint : Point; {статический объект,
который можно использовать} <o:p></o:p></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'>DynPoint : PointPtr; {
должен быть инициализирован перед<o:p></o:p></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='mso-spacerun:yes'>                                </span>использованием
с помощью процедуры </i><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>n</span>ew}<span style='mso-spacerun:yes'> 
</span><o:p></o:p></i></p>

<p class=spase><span style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal>Доступ к полям объекта может осуществляться, как доступ к
полям обычной записи с помощью полного выражения селектора, либо оператора <i
style='mso-bidi-font-style:normal'>with</i>, например: </p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>StatPoint.Visible := False;<o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>StatPoint.X := 0; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>StatPoint.Y := 0; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:0cm'>или<span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>with</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> StatPoint <b style='mso-bidi-font-weight:normal'>do</b> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>X := 0; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Y := 0; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>end</i></b><i style='mso-bidi-font-style:
normal'>;<span style='mso-spacerun:yes'>  </span><o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=remarc>Здесь следует помнить, что унаследованные поля объекта<span
style='font-style:normal'> </span>Location в экземпляре StatPoint доступны.</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Несмотря на то, что существует принципиальная возможность
непосредственного доступа к полям объекта, делать этого не следует.
Синтаксическая конструкция объекта обеспечивает это другими средствами. Такими
средствами являются <i style='mso-bidi-font-style:normal'>методы</i> (<i
style='mso-bidi-font-style:normal'>methods</i>) – процедуры или функции,
определенные в рамках конструкции <i style='mso-bidi-font-style:normal'>самого
объекта</i> (методы также часто называют <i style='mso-bidi-font-style:normal'>правилами</i>).
</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>Методы<o:p></o:p></b></p>

<p class=MsoNormal>С учетом свойства инкапсуляции, т. е. объединения в одной
синтаксической конструкции спецификаций данных и выполняемых над ними действий,
тип <i style='mso-bidi-font-style:normal'>ob</i><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>j</span>ect</i> (пока
все еще в упрощенном виде) может быть определен следующим образом:</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt'>&lt;объект&gt;<span
style='mso-spacerun:yes'>                   </span>::=<span
style='mso-spacerun:yes'>  </span><b style='mso-bidi-font-weight:normal'>obect</b><o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt'><span
style='mso-spacerun:yes'>                                     
</span>&lt;список полей &gt;;&lt;список методов&gt;;<o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt'><span
style='mso-spacerun:yes'>                                      </span>end</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:8.0pt;mso-bidi-font-size:
10.0pt;font-family:Symbol;mso-ascii-font-family:Baltica;mso-hansi-font-family:
Baltica;mso-char-type:symbol;mso-symbol-font-family:Symbol'><span
style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>&ocirc;</span></span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:8.0pt;mso-bidi-font-size:
10.0pt'><o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt'><span
style='mso-spacerun:yes'>                                      </span><b
style='mso-bidi-font-weight:normal'>obect</b> (&lt;имя предка&gt;)<o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt'><span
style='mso-spacerun:yes'>                                     
</span>&lt;список полей &gt;;&lt;список методов&gt;;<o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt'><span
style='mso-spacerun:yes'>                                      </span><b
style='mso-bidi-font-weight:normal'>end<o:p></o:p></b></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt'>&lt;список методов&gt;<span
style='mso-spacerun:yes'>      </span>::=<span style='mso-spacerun:yes'> 
</span>&lt;метод &gt;;</span></i><i style='mso-bidi-font-style:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt;font-family:Symbol;mso-ascii-font-family:
Baltica;mso-hansi-font-family:Baltica;mso-char-type:symbol;mso-symbol-font-family:
Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>&ocirc;</span></span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:8.0pt;mso-bidi-font-size:
10.0pt'><o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt'><span
style='mso-spacerun:yes'>                                    </span>&lt;список
методов&gt;;<o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt'><span
style='mso-spacerun:yes'>                                   
</span>&lt;метод&gt;;<o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt'>&lt; метод&gt;<span
style='mso-spacerun:yes'>                  </span>::=<span
style='mso-spacerun:yes'>  </span>&lt;заголовок процедуры&gt;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:8.0pt;mso-bidi-font-size:
10.0pt;font-family:Symbol;mso-ascii-font-family:Baltica;mso-hansi-font-family:
Baltica;mso-char-type:symbol;mso-symbol-font-family:Symbol'><span
style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>&ocirc;</span></span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:8.0pt;mso-bidi-font-size:
10.0pt'><o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt'><span
style='mso-spacerun:yes'>                                   
</span>&lt;заголовок функции&gt;<o:p></o:p></span></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Таким образом синтаксисом установлено, что для описания типа
используется зарезервированное слово<b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'> </i></b><i style='mso-bidi-font-style:normal'>obect</i>,
после чего аналогично записи перечисляются поля данных. Но в отличие от записи
далее, как правило, следует список методов, т. е. процедур либо функций,
которые оперируют этими данными. Порядок описания методов произволен, но все
поля данных должны быть перечислены до описания первого метода.</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=remarc><span style='mso-spacerun:yes'> </span>В соответствии со
сказанным ранее, список методов в описании объекта может и отсутствовать.
Однако этот факт не отражен в приведенном варианте конструкции, поскольку
отсутствие в описании объекта методов противоречит особенностям технологии, изначально
предполагающей, что поведение объекта, заданное методами, и свойства,<span
style='color:black'> определяемые </span>данными, в совокупности позволяют
сформировать конечную абстракцию<span style='mso-spacerun:yes'> 
</span>некоторого физического объекта.</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Список методов представляет собой перечисление только
заголовков процедур и (или) функций, аналогичное их предварительному описанию.
Сами процедуры или функции (по аналогии с секцией реализации в конструкции
модуля) определяются после описания объекта. В отличие от обычного описания
процедуры (функции) в описание метода включается имя объекта, составной частью
которого он является, т. е.:</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt'>&lt;заголовок метода&gt;<span
style='mso-spacerun:yes'>    </span>::= &lt;имя объекта &gt;.&lt; заголовок
процедуры &gt;;</span></i><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'><span style='font-size:8.0pt;mso-bidi-font-size:
10.0pt;font-family:Symbol;mso-ascii-font-family:Baltica;mso-hansi-font-family:
Baltica;mso-char-type:symbol;mso-symbol-font-family:Symbol'><span
style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>&ocirc;</span></span></i></b><b
style='mso-bidi-font-weight:normal'><span style='font-size:8.0pt;mso-bidi-font-size:
10.0pt'><o:p></o:p></span></b></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt'><span
style='mso-spacerun:yes'>                </span><span
style='mso-spacerun:yes'>                      </span>&lt;имя объекта &gt;.
&lt; заголовок функции &gt;</span></i><span style='font-size:8.0pt;mso-bidi-font-size:
10.0pt'><o:p></o:p></span></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=remarc>Здесь следует обратить внимание на точку, отделяющую имя
объекта, которому принадлежит метод, от описания соответствующей процедуры или
функции, т. е. обычную для структуры <span lang=EN-US style='mso-ansi-language:
EN-US'>record</span> нотацию селектора. Это обусловлено тем, что в действительности
конструкция объекта воспринимается транслятором как запись, т. е. методам
соответствуют поля данных процедурного типа, значениями которых являются
указатели на точки вызова методов.</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Так, например, позиции на экране видеомонитора,
представляемой объектом, может соответствовать описание типа:</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>type <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Locatiion = <b
style='mso-bidi-font-weight:normal'>object</b> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:3.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>X, Y : Integer;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:3.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>procedure Init(InitX,
InitY : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:3.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> GetX : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:3.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> GetY : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:78.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Location.Init(InitX,
InitY : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:42.55pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>X := InitX; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:42.55pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Y := InitY; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Location.GetX :
Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:42.55pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>GetX := X; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Location.GetY :
Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:42.55pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>GetY := Y; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>end</i></b><i style='mso-bidi-font-style:
normal'>; <o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Для инициализации (установки в заданную позицию) экземпляра
типа <i style='mso-bidi-font-style:normal'>Location </i>в этом случае<i
style='mso-bidi-font-style:normal'> </i>достаточно вызвать метод таким же
способом, как поле записи, чем метод, впрочем, по представлению и является:</p>

<p class=spase><span style='mso-spacerun:yes'> </span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>var <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>MyLocation : Location;
<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin</span> <o:p></o:p></i></b></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'>MyLocation.Init(17,
42);</i><i style='mso-bidi-font-style:normal'><span style='font-size:8.0pt;
mso-bidi-font-size:10.0pt'> {инициализация позиции с координатами </span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:8.0pt;
mso-bidi-font-size:10.0pt;mso-ansi-language:EN-US'>X</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:8.0pt;mso-bidi-font-size:
10.0pt'>=17,<o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt'><span
style='mso-spacerun:yes'>       </span>. . .<span
style='mso-spacerun:yes'>            </span><span
style='mso-spacerun:yes'>                                                                     </span></span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:8.0pt;
mso-bidi-font-size:10.0pt;mso-ansi-language:EN-US'>Y</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:8.0pt;mso-bidi-font-size:
10.0pt'>=42}<o:p></o:p></span></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=remarc>В связи с примером можно подчеркнуть, что Borland Pascal
допускает применение к полям данных объекта всех операций, соответствующих типу
поля, но выполнение таких операций крайне нежелательно. Например, в языке
SmallTalk действия над полями, которые не предусмотрены методами, вообще
запрещены, или, иными словами, свойство инкапсуляции определено гораздо строже,
чем в Borland Pascal.</p>

<p class=remarc>Плохим примером в этом смысле будет замена<span
style='font-style:normal'> </span>вызова метода MyLocation.Init(0,0)
операторами</p>

<p class=remarc><span lang=EN-US style='mso-ansi-language:EN-US'>MyLocation.X
:= 1;<o:p></o:p></span></p>

<p class=remarc><span lang=EN-US style='mso-ansi-language:EN-US'>MyLocation.Y
:= 1;<o:p></o:p></span></p>

<p class=remarc style='text-indent:0cm'>результат выполнения которых будет тот
же – инициализация левой верхней позиции экрана. Такая замена допустима, но
крайне нежелательна, что является одним из основных требований ООП. </p>

<p class=remarc style='text-indent:21.3pt'>Кроме того, следует отметить
требование отсутствия<b style='mso-bidi-font-weight:normal'> </b>совпадений в
именах формальных параметров метода и полей данных объекта. В общем случае это
не дополнительные ограничения, налагаемые объектно-ориентированным программированием,
а старые правила Стандарта языка, требующие различия в именах формальных
параметров процедуры и ее локальных переменных. Попытка нарушения этого
ограничения приводит к неизбежной ошибке. </p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Иными словами для операций со значениями одного или
нескольких полей объекта следует вызывать метод, <i style='mso-bidi-font-style:
normal'>принадлежащий </i>этому объекту. Метод либо устанавливает величину
требуемого поля, либо возвращает ее, определяя <i style='mso-bidi-font-style:
normal'>что</i><span style='mso-spacerun:yes'>  </span>нужно “сделать” с
объектом, а <i style='mso-bidi-font-style:normal'>как</i> это делается – не
важно и “скрыто” в описании метода.</p>

<p class=MsoNormal>Такая методология описания действий обеспечивает явные
преимущества технологии ООП:</p>

<p class=namb style='margin-left:0cm;text-indent:21.25pt;mso-list:l2 level1 lfo3'><![if !supportLists]><i
style='mso-bidi-font-style:normal'><span style='mso-fareast-font-family:Baltica;
mso-bidi-font-family:Baltica'><span style='mso-list:Ignore'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span></i><![endif]>Возможность
“смысловой” трактовки действий (<i style='mso-bidi-font-style:normal'>что</i><span
style='mso-spacerun:yes'>  </span>нужно “сделать”), свойственной аппликативным
языкам.</p>

<p class=namb style='margin-left:0cm;text-indent:21.25pt;mso-list:l2 level1 lfo4'><![if !supportLists]><i
style='mso-bidi-font-style:normal'><span style='mso-fareast-font-family:Baltica;
mso-bidi-font-family:Baltica'><span style='mso-list:Ignore'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span></i><![endif]>Полную
степень свободы в выборе требуемого набора действий над полями объекта. При
описании объектов не следует воздерживаться от формулировки “лишних” методов,
которые могут и не использоваться в программе, использующей данный тип объекта.
Лишние методы не приведут к избыточности, как в смысле эффективности кода
рабочей программы, так и в его размерах (размерах файлов с расширением <i
style='mso-bidi-font-style:normal'>.EXE</i> ), поскольку описание этих методов
увеличивает объект только в исходной форме, а компоновщик транслятора <i
style='mso-bidi-font-style:normal'>Borland Pascal</i><span
style='mso-spacerun:yes'>  </span>игнорирует все коды методов, которые не
вызываются в программе. Следовательно, в рабочей программе их просто не будет. </p>

<p class=namb style='margin-left:0cm;text-indent:21.25pt;mso-list:l2 level1 lfo5'><![if !supportLists]><i
style='mso-bidi-font-style:normal'><span style='mso-fareast-font-family:Baltica;
mso-bidi-font-family:Baltica'><span style='mso-list:Ignore'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span></i><![endif]>Возможность
модификации методов и данных без изменения остальной части программы. Если
&quot;никто&quot; вне объекта не &quot;знает&quot; представление его внутренних
данных, то программист, манипулирующий объектом, может менять детали
внутреннего представления данных и формулировку методов до тех пор, пока такие
изменения не потребуют замены заголовков самих методов. Например, в пределах
некоторого объекта данные могут быть представлены массивом, но позднее (с
увеличением масштаба и ростом объема данных) потребуется представить их в виде
древовидной структуры. Если объект полностью инкапсулирован, такое изменение в
представлении данных не повлияет на использование объекта. Интерфейс его не
изменится, что позволит отладить работу объекта, не нарушая программу, которая
использует данный объект. </p>

<p class=namb style='margin-left:0cm;text-indent:21.25pt;mso-list:l2 level1 lfo6'><![if !supportLists]><i
style='mso-bidi-font-style:normal'><span style='mso-fareast-font-family:Baltica;
mso-bidi-font-family:Baltica;letter-spacing:-.2pt'><span style='mso-list:Ignore'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span></i><![endif]>Целостность
данных. Если код (спецификация действий) и данные отделены друг от друга,
всегда существует опасность вызова процедуры с не предназначенными для нее
данными. С другой стороны данные при программировании не могут в принципе
существовать, как “вещь в себе”. Они являются тем, что должно обрабатываться,
причем только определенным способом. На профессиональном жаргоне об этом
говорят, что данные дол-жны определять поток кода, а код управляет формой и
величинами данных. Строгий контроль типов, предусмотренный концепцией данных
Стандарта помогает, в лучшем случае, установить несоответствие между данными и
способами их обработки, но не позволяет определить требуемый способ.<span
style='mso-spacerun:yes'>  </span>Связывая код и данные в единой оболочке,
объект помогает в этом смысле “упорядочить” их обработку и заставляет
программиста думать о коде и данных как о едином целом. Обычно для получения
величины одного из полей объекта вызывается метод, принадлежащий этому объекту,
который возвращает величину требуемого поля, а для установки величины поля
вызывается метод,<span style='letter-spacing:-.2pt'> присваивающий этому полю
новое значение, чем и обеспечивается защита от “несанкционированного доступа”
или <i style='mso-bidi-font-style:normal'>целостность</i> данных.<o:p></o:p></span></p>

<p class=MsoNormal>Пример объекта <i style='mso-bidi-font-style:normal'>Location</i>
в этом смысле мало иллюстративен. Перечисленные особенности начинают
проявляться при формировании дерева порождений.</p>

<p class=MsoNormal>Если рассматривать <i style='mso-bidi-font-style:normal'>семейство</i>
(коллекцию) объектов, описывающих различные (плоские) геометрические фигуры на
экране видеомонитора (например, точку, линию, круг и т. п.) , то можно отметить
следующее.</p>

<p class=MsoNormal>Точка – это видимая <i style='mso-bidi-font-style:normal'>позиция</i>
на экране. Поэтому соответствующий ей объект <i style='mso-bidi-font-style:
normal'>Point</i> можно описать, используя имеющийся объект <i
style='mso-bidi-font-style:normal'>Location,</i> дополнив его полем признака
того, видима точка на экране или нет (<i style='mso-bidi-font-style:normal'>Visible
: boolean</i>), а также методами, позволяющими показать точку (<i
style='mso-bidi-font-style:normal'>procedure Show</i>), погасить ее (<i
style='mso-bidi-font-style:normal'>procedure Hide</i>), переместить на новую
позицию (<i style='mso-bidi-font-style:normal'>procedure MoveTo</i>), вернуть
значение признака (<i style='mso-bidi-font-style:normal'>function IsVisible</i>)
и заново определить метод, инициализирующий точку. С учетом наследования для
этого не требуется повторять в описании те поля, которые определяют позицию
точки и методы объекта<i style='mso-bidi-font-style:normal'> Location</i>,
используемые при<span style='mso-spacerun:yes'>  </span>описании методов
объекта<i style='mso-bidi-font-style:normal'> Point</i>. Предок для
наследования при описании типа, согласно синтаксису, явно указывается в круглых
скобках после зарезервированного слова <i style='mso-bidi-font-style:normal'>object</i>..</p>

<p class=MsoNormal>Таким образом, определению объекта <i style='mso-bidi-font-style:
normal'>Point = object(Location)</i><span style='mso-spacerun:yes'> 
</span>соответствует описание типа:</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-indent:21.3pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Point = <b
style='mso-bidi-font-weight:normal'>object</b>(Location) <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible : Boolean;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span><b style='mso-bidi-font-weight:normal'>procedure
</b>Init(InitX, InitY : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Show; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Hide; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> IsVisible : Boolean; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> MoveTo(NewX, NewY :
Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:2.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Point.Init(InitX,
InitY : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Location.Init(InitX,InitY);
{</span>унаследованный</i><i style='mso-bidi-font-style:normal'><span
style='mso-ansi-language:EN-US'> </span>метод</i><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>}<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible := False<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Point.Show; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible := True; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>PutPixel(X, Y,
GetColor) <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Point.Hide;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span><b style='mso-bidi-font-weight:normal'>begin</b>
<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible := false; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>PutPixel(X, Y,
GetBkColor)<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Point.IsVisible :
Boolean;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>IsVisible := Visible<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'> </span>end</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>;<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Point.MoveTo(NewX,
NewY : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Hide; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>X := NewX; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Y := NewY; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Show; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>end</i></b><i style='mso-bidi-font-style:
normal'><o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>end</i></b><i style='mso-bidi-font-style:
normal'>;<o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>При определении методов объекта <i style='mso-bidi-font-style:
normal'>Point</i> использованы стандартная процедура модуля <i
style='mso-bidi-font-style:normal'>Graph</i> (<i style='mso-bidi-font-style:
normal'>PutPixel</i>), а для его инициализации – метод <i style='mso-bidi-font-style:
normal'><span style='letter-spacing:-.2pt'>Point.Init, </span></i><span
style='letter-spacing:-.2pt'>предписывающий<span style='mso-spacerun:yes'> 
</span>при инициализации точки делать ее невидимой.</span></p>

<div style='mso-element:frame;mso-element-frame-hspace:9.0pt;mso-element-wrap:
around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
margin;mso-element-top:15.25pt;mso-height-rule:exactly'>

<table cellspacing=0 cellpadding=0 hspace=0 vspace=0 align=left>
 <tr>
  <td valign=top align=left style='padding-top:0cm;padding-right:9.0pt;
  padding-bottom:0cm;padding-left:9.0pt'>
  <p class=MsoNormal style='text-indent:0cm;mso-element:frame;mso-element-frame-hspace:
  9.0pt;mso-element-wrap:around;mso-element-anchor-vertical:paragraph;
  mso-element-anchor-horizontal:margin;mso-element-top:15.25pt;mso-height-rule:
  exactly'><!--[if gte vml 1]><v:shapetype id="_x0000_t75" coordsize="21600,21600"
   o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe" filled="f"
   stroked="f">
   <v:stroke joinstyle="miter"/>
   <v:formulas>
    <v:f eqn="if lineDrawn pixelLineWidth 0"/>
    <v:f eqn="sum @0 1 0"/>
    <v:f eqn="sum 0 0 @1"/>
    <v:f eqn="prod @2 1 2"/>
    <v:f eqn="prod @3 21600 pixelWidth"/>
    <v:f eqn="prod @3 21600 pixelHeight"/>
    <v:f eqn="sum @0 0 1"/>
    <v:f eqn="prod @6 1 2"/>
    <v:f eqn="prod @7 21600 pixelWidth"/>
    <v:f eqn="sum @8 21600 0"/>
    <v:f eqn="prod @7 21600 pixelHeight"/>
    <v:f eqn="sum @10 21600 0"/>
   </v:formulas>
   <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
   <o:lock v:ext="edit" aspectratio="t"/>
  </v:shapetype><v:shape id="_x0000_i1025" type="#_x0000_t75" style='width:134.25pt;
   height:116.25pt' o:ole="">
   <v:imagedata src="8.%20Oбъектнo-ориентированная%20технология%20программирования.files/image001.wmz"
    o:title=""/>
  </v:shape><![endif]--><![if !vml]><img width=179 height=155
  src="8.%20Oбъектнo-ориентированная%20технология%20программирования.files/image002.gif"
  v:shapes="_x0000_i1025"><![endif]><!--[if gte mso 9]><xml>
   <o:OLEObject Type="Embed" ProgID="Word.Document.8" ShapeID="_x0000_i1025"
    DrawAspect="Content" ObjectID="_1370318752">
   </o:OLEObject>
  </xml><![endif]--></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal>Далее, отметив, что круг это всего лишь “толстая точка”,
толщина которой задается радиусом, можно определить очередной объект в иерархии
описания геометрических фигур – объект <i style='mso-bidi-font-style:normal'>Circle</i>,
который будет наследовать <i style='mso-bidi-font-style:normal'>Point</i> и
иметь дополнительное поле <i style='mso-bidi-font-style:normal'>Radius</i> и расширенный
список методов. На этом же уровне иерархии можно определить квадрат, прямоугольник,
кривую и другие фигуры. <span style='letter-spacing:-.2pt'>Затем, например,
кольцо как два круга, один из которых вложен в другой и всегда невидим, и т. п.</span>
<span style='letter-spacing:-.2pt'>Дерево порождения для рассмотренных примеров
иллюстрируется рисунком (Рис.8.1).</span></p>

<p class=MsoNormal>Учитывая, что синтаксис описания объектного типа напоминает
конструкцию интерфейсного раздела модуля, а непосредственная формулировка методов
выполняется вне описания типа подобно тому, как это делается в секции
реализации, обычно рекомендуется оформлять объекты в виде модулей. Для
определения объекта в модуле не требуется специальный синтаксис и нет дополнительных
затруднений (в смысле наследования) при конструировании коллекций, поскольку
тип объекта, который определен в интерфейсном разделе модуля, может иметь
производные типы, определенные в разделе реализации этого модуля. В том случае,
когда модуль <i style='mso-bidi-font-style:normal'>В</i> использует модуль <i
style='mso-bidi-font-style:normal'>А</i>, в модуле <i style='mso-bidi-font-style:
normal'>В</i> также можно определять производные типы от любого типа объекта,
описанного в модуле <i style='mso-bidi-font-style:normal'>А </i>(“<i
style='mso-bidi-font-style:normal'>экспортируемого</i>” модулем <i
style='mso-bidi-font-style:normal'>А</i>), если они не защищены спецификатором <i
style='mso-bidi-font-style:normal'>private</i>. Этот<span
style='mso-spacerun:yes'>  </span>спецификатор, допустим в версиях, начиная с
шестой, и действует на все поля и методы, которые следуют за ним в описании
типа объекта. Скрытые с его помощью поля и методы доступны <i style='mso-bidi-font-style:
normal'>только</i> внутри самого объекта, в котором они описаны, или внутри
других подпрограмм либо методов, определенных в секции реализации <i
style='mso-bidi-font-style:normal'>того же</i> модуля. </p>

<p class=MsoNormal><span style='mso-spacerun:yes'> </span>Типы объектов <i
style='mso-bidi-font-style:normal'>Locatiion</i> и <i style='mso-bidi-font-style:
normal'>Point</i>, а также тела их<i style='mso-bidi-font-style:normal'> </i>методов,
в модуле определяются следующим образом: </p>

<p class=spase><span style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>unit</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Points;<o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>interface <span
style='mso-spacerun:yes'> </span><o:p></o:p></span></i></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>uses</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Graph <o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>type <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Locatiion = <b
style='mso-bidi-font-weight:normal'>object</b> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:3.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>X, Y : Integer;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:3.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Init(InitX, InitY :
Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:3.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> GetX : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:3.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> GetY : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:78.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Point = <b
style='mso-bidi-font-weight:normal'>object</b>(Location) <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible : Boolean;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span><b style='mso-bidi-font-weight:normal'>procedure
</b>Init(InitX, InitY : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Show; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Hide; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> IsVisible : Boolean; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> MoveTo(NewX, NewY :
Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:2.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Point.Init(InitX,
InitY : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Location.Init(InitX,InitY);
<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible := False<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Point.Show; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible := True; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>PutPixel(X, Y,
GetColor) <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>; <o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>implementation <o:p></o:p></span></b></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>{ </span>Реализация</i><i style='mso-bidi-font-style:
normal'><span style='mso-ansi-language:EN-US'> </span>методов</i><i
style='mso-bidi-font-style:normal'><span style='mso-ansi-language:EN-US'> </span>модуля</i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Location } <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Location.Init(InitX,
InitY : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:42.55pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>X := InitX; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:42.55pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Y := InitY <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Location.GetX :
Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:42.55pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>GetX := X <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Location.GetY :
Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:42.55pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>GetY := Y <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>; <o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'>{ Реализация методов
модуля Point } <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Point.Init(InitX,
InitY : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Location.Init(InitX,InitY);
{</span>унаследованный</i><i style='mso-bidi-font-style:normal'><span
style='mso-ansi-language:EN-US'> </span>метод</i><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>}<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible := False<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Point.Show; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible := True; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>PutPixel(X, Y,
GetColor) <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Point.Hide;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span><b style='mso-bidi-font-weight:normal'>begin </b><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible := False; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>PutPixel(X, Y,
GetBkColor)<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Point.IsVisible :
Boolean;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>IsVisible := Visible<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'> </span>end</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>;<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Point.MoveTo(NewX,
NewY : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Hide; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>X := NewX; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Y := NewY; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Show; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>end</i></b><i style='mso-bidi-font-style:
normal'><o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>end</i></b><i style='mso-bidi-font-style:
normal'>;<o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Чтобы использовать объекты и правила, определенные в модуле <i
style='mso-bidi-font-style:normal'>Point</i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'>s</span></i>, необходимо
“подключить” этот модуль с помощью инструкции<i style='mso-bidi-font-style:
normal'> uses</i> к своей программе и определить экземпляр типа <i
style='mso-bidi-font-style:normal'>Point</i> в разделе переменных:</p>

<p class=spase><span style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>program</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> MakePoints; <o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>uses</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Graph, Points;<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>var <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>APoint : Point;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>.<span style='mso-spacerun:yes'> 
</span>.<span style='mso-spacerun:yes'>  </span>.<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>APoint.Init(151,
82);<span style='mso-spacerun:yes'>                </span>{ </span>инициализация</i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> X, Y </span>в</i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'> 151,82 } <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>APoint.Show;<span
style='mso-spacerun:yes'>                         </span>{ </span>точка</i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> (APoint) </span>включается</i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'> } <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'>APoint.MoveTo(163, 101);<span style='mso-spacerun:yes'>       </span>{
точка перемещается в 163,101 }<o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'>APoint.Hide;<span style='mso-spacerun:yes'>           </span><span
style='mso-spacerun:yes'>              </span>{ Точка выключается }<span
style='mso-spacerun:yes'>  </span><o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span style='mso-spacerun:yes'>  </span>.<span
style='mso-spacerun:yes'>  </span>.<span style='mso-spacerun:yes'>  </span>.<o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:0cm'>или с использованием <i
style='mso-bidi-font-style:normal'>with</i>, что применительно к методам
допускается синтаксисом, поскольку это те же <i style='mso-bidi-font-style:
normal'>поля </i>записи, но поля процедурного типа:</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>with</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> APoint <b style='mso-bidi-font-weight:normal'>do</b> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Init(151, 82); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Show; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>MoveTo(163, 101); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'>Hide; <o:p></o:p></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='mso-spacerun:yes'> </span>. . .<o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>В связи с аналогией по представлению, объекты так же, как и
записи, могут передаваться процедурам как параметры, использоваться как
компоненты структурных типов (кроме файлов) и, в частности, динамических
структур данных, а также распределяться в <i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'>H</span>eap</i> области памяти.</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=remarc>В качестве замечания можно еще раз отметить, что <b
style='mso-bidi-font-weight:normal'>корнем </b>дерева, как и любой
генеалогической схемы в естествоз­нании, должен служить объект, определяющий
некоторое <span style='color:black'>ключевое </span>свойство, общее для всех
объектов коллекции. В рассматриваемых примерах та­ким ключевым объектом
является объект Location. Все другие объекты коллекции наследуют его ключевые
признаки. Такой объект, вообще говоря, может быть абстракцией, к которой в
программе не будет непосредственных обращений (собственно, Location и Point
являются именно абстрактными объектами (abstract <span lang=EN-US
style='mso-ansi-language:EN-US'>o</span>bject type). На каждом новом уровне ие­рархии
порождения коллекции при описании потомков добавляется какой-либо новый
признак, позволя­ющий детализировать объекты этого уровня и отличать их от предшественников.
Следовательно, при формировании коллекции объектов в ООП необходимо
позаботиться о том<span style='color:black'>, </span>чтобы корневой объ­ект
схемы имел только те свойства, которые являются общими для всей коллекции.
Иначе вносимые изменения могут затрагивать все де­рево порождения, что нежелательно.
Если сопоставить сказанное выше с возможностями модульной организации программ,
то становится очевидным следующее: при определении ка­кой-либо коллекции в виде
отдельно компили­руемого модуля д<span style='color:black'>ля </span>нового
порождения потомка достаточно подключить в этот модуль соответствующий <span
style='color:black;font-style:normal'>.</span><span style='color:black'>TPU-</span>файл
(или <span style='color:black;font-style:normal'>.</span><span
style='color:black'>TPW-</span>файл для оконных версий), уменьшив тем самым
затраты на введение объекта с новым качеством. </p>

<p class=spase><span style='mso-spacerun:yes'> </span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>Контекст правила и
параметр </b><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>S</span>elf</b> </p>

<p class=MsoNormal>При формулировке методов для объектов, рассматриваемых в примерах,
при обращении к их полям не использовалась конструкция <i style='mso-bidi-font-style:
normal'>with object do</i>, т.е. предполагалось, что поля данных являются
свободно доступными для методов этого объекта. Таким образом, будучи разделенными
в исходной программе, тела методов и поля данных объекта фактически совместно
используют один и тот же контекст (область действия, видимости или
доступности). Поэтому, например, метод объекта <i style='mso-bidi-font-style:
normal'>Location</i> может содержать оператор <i style='mso-bidi-font-style:
normal'>GetX :=Y</i> без какого-либо спецификатора для <i style='mso-bidi-font-style:
normal'>Y</i>. </p>

<p class=MsoNormal>Возможность такой формулировки метода обусловлена тем, что
поле <i style='mso-bidi-font-style:normal'>Y</i> принадлежит объекту, который
вызвал этот метод и при вызове метода по умолчанию используется неявный
оператор <i style='mso-bidi-font-style:normal'>with MySelf do </i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>M</span>ethod</i>. Этот неявный оператор вседа сопровождается передачей
методу “невидимого” параметра, который имеет зарезервированное имя <i
style='mso-bidi-font-style:normal'>Self</i>, и фактически является указателем
на соответствующий экземпляр объекта. </p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=remarc>Методу GetY, который принадлежит объекту Location, в этом
смысле может быть поставлен в соответвие синтаксически не вполне корректный
(Self не может быть именем параметра), но поясняющий сказанное выше фрагмент
кода: </p>

<p class=remarc style='line-height:50%'><b style='mso-bidi-font-weight:normal'><o:p>&nbsp;</o:p></b></p>

<p class=remarc><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function</span></b><span lang=EN-US
style='mso-ansi-language:EN-US'> Location.GetY(<b style='mso-bidi-font-weight:
normal'>var</b> Self : Location) : Integer; <o:p></o:p></span></p>

<p class=remarc style='text-indent:1.0cm'><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></b></p>

<p class=remarc style='text-indent:35.45pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>GetY := Self.Y<o:p></o:p></span></p>

<p class=remarc style='text-indent:1.0cm'><b style='mso-bidi-font-weight:normal'>end</b>;<b
style='mso-bidi-font-weight:normal'><span style='mso-spacerun:yes'>  </span><o:p></o:p></b></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>В реальных программах указатель <i style='mso-bidi-font-style:
normal'>Self</i>, как правило, не используется, поскольку компиляторами <i
style='mso-bidi-font-style:normal'>Borland Pascal</i> он практически всегда
учитывается автоматически. Но знать о его существовании полезно, поскольку в
некоторых немногочисленных ситуациях приходится &quot;входить&quot; внутрь
метода и использовать параметр <i style='mso-bidi-font-style:normal'>Self</i>
явно. Такая ситуация может возникать, когда имена полей данных конфликтуют в
пределах методов, но избежать ее достаточно легко, используя уникальные имена
для этих полей.</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=remarc>Явное использование параметра Self всего лишь<b
style='mso-bidi-font-weight:normal'><span style='font-style:normal'> </span></b>допустимо,
но при этом, подобно непосредственному обращению к полям объекта, минуя метод,
противоречит принципам ООП. Однако это замечание в системах программирования
Borland Pascal не распространяется на методы, реализованные как ассемблерные
вставки. За более подробной информацией о вызовах таких методов необходимо
обращаться к разделу &quot;Условия вызова правил&quot; в фирменной
документации. </p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>Совместимость типов
объектов<o:p></o:p></b></p>

<p class=MsoNormal>Свойство наследования, присущее объектному типу, определяет,
что производный тип<span style='mso-spacerun:yes'>  </span>наследует от
прародителя совместимость типов отдельных его компонент. По отношению к <span
style='letter-spacing:-.2pt'>объекту в целом совместимость типов
рассматривается как совместимость между:<o:p></o:p></span></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=bulet style='margin-left:0cm;text-indent:0cm;mso-list:l0 level1 lfo1'><![if !supportLists]><span
style='font-size:7.0pt;mso-bidi-font-size:10.0pt;font-family:Wingdings;
mso-fareast-font-family:Wingdings;mso-bidi-font-family:Wingdings;mso-ansi-language:
RU'><span style='mso-list:Ignore'>n<span style='font:7.0pt "Times New Roman"'> </span></span></span><![endif]><span
style='mso-ansi-language:RU'>&yacute;&ecirc;&ccedil;&aring;&igrave;&iuml;&euml;&yuml;&eth;&agrave;&igrave;&egrave;
&icirc;&aacute;&uacute;&aring;&ecirc;&ograve;&icirc;&acirc;; <o:p></o:p></span></p>

<p class=bulet style='margin-left:0cm;text-indent:0cm;mso-list:l0 level1 lfo1'><![if !supportLists]><span
style='font-size:7.0pt;mso-bidi-font-size:10.0pt;font-family:Wingdings;
mso-fareast-font-family:Wingdings;mso-bidi-font-family:Wingdings;mso-ansi-language:
RU'><span style='mso-list:Ignore'>n<span style='font:7.0pt "Times New Roman"'> </span></span></span><![endif]><span
style='mso-ansi-language:RU'>&oacute;&ecirc;&agrave;&ccedil;&agrave;&ograve;&aring;&euml;&yuml;&igrave;&egrave;
&iacute;&agrave;
&yacute;&ecirc;&ccedil;&aring;&igrave;&iuml;&euml;&yuml;&eth;&ucirc;
&icirc;&aacute;&uacute;&aring;&ecirc;&ograve;&icirc;&acirc;; <o:p></o:p></span></p>

<p class=bulet style='margin-left:0cm;text-indent:0cm;mso-list:l0 level1 lfo1'><![if !supportLists]><span
style='font-size:7.0pt;mso-bidi-font-size:10.0pt;font-family:Wingdings;
mso-fareast-font-family:Wingdings;mso-bidi-font-family:Wingdings;mso-ansi-language:
RU'><span style='mso-list:Ignore'>n<span style='font:7.0pt "Times New Roman"'> </span></span></span><![endif]><span
style='mso-ansi-language:RU'>&ocirc;&icirc;&eth;&igrave;&agrave;&euml;&uuml;&iacute;&ucirc;&igrave;&egrave;
&egrave;
&ocirc;&agrave;&ecirc;&ograve;&egrave;&divide;&aring;&ntilde;&ecirc;&egrave;&igrave;&egrave;
&iuml;&agrave;&eth;&agrave;&igrave;&aring;&ograve;&eth;&agrave;&igrave;&egrave;
&icirc;&aacute;&uacute;&aring;&ecirc;&ograve;&iacute;&icirc;&atilde;&icirc;
&ograve;&egrave;&iuml;&agrave;. <o:p></o:p></span></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='line-height:90%'>Во всех случаях совместимость
объектных типов простирается только от <i style='mso-bidi-font-style:normal'>потомка</i>
к <i style='mso-bidi-font-style:normal'>прародителю</i>. Иными словами, производные
типы могут использоваться вместо прародительских типов, но не <i
style='mso-bidi-font-style:normal'>наоборот</i>, поскольку производные типы,
благодаря наследованию, содержат поля прародительского типа. Следовательно,
производный тип всегда их “заполнит”. В противном случае некоторые из полей
потомка останутся неопределенными после присваивания, (их просто нет у прародителя),
что опасно с точки зрения тупиковых для транслятора ситуаций, и, следовательно,
недопустимо. Так, при описаниях в разделах типов и переменных:</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='line-height:90%'><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>type <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:1.0cm;line-height:90%'><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>LocationPtr = ^Location; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm;line-height:90%'><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>PointPtr = ^Point; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm;line-height:90%'><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>CirclePtr = ^Circle; <o:p></o:p></span></i></p>

<p class=MsoNormal style='line-height:90%'><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>var <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:1.0cm;line-height:90%'><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>ALocation : Location; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm;line-height:90%'><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>APoint : Point; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm;line-height:90%'><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>ACircle : Circle; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm;line-height:90%'><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>PLocation : LocationPtr; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm;line-height:90%'><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>PPoint : PointPtr; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm;line-height:90%'><i
style='mso-bidi-font-style:normal'>PCircle : CirclePtr; <o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-indent:0cm'>будут верны следующие присваивания:<span
style='mso-spacerun:yes'>  </span></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>ALocation := APoint; <o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>APoint := ACircle; <o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'>ALocation := ACircle; <o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Обратные присваивания, естественно, не допустимы.</p>

<p class=MsoNormal>В результате выполнения первого оператора присваивания в <i
style='mso-bidi-font-style:normal'>ALocation</i> будут скопированы только поля <i
style='mso-bidi-font-style:normal'>X</i> и<i style='mso-bidi-font-style:normal'>
Y,</i> а поле <i style='mso-bidi-font-style:normal'>Visible</i> будет игнорироваться.</p>

<p class=MsoNormal>Совместимость указателей на типы объектов подчиняется тем же
правилам: указатели на потомков могут быть присвоены указателям на
прародителей. Таким образом, допустимы следующие присваивания: </p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>PPoint := PCircle; <o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>PLocation := PPoint; <o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'>PLocation := PCircle; <o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Правила совместимости не изменяются при передаче экземпляров
объектов в качестве параметров процедур или методов. Фактический параметр может
быть экземпляром объекта того же типа или типа потомка. При<span
style='mso-ansi-language:EN-US'> </span>заголовке<span style='mso-ansi-language:
EN-US'> </span>процедуры<span lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>procedure </span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>DragIt(Target : Point):<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:0cm'>фактические параметры могут быть
параметрами типа <i style='mso-bidi-font-style:normal'>Point</i> или <i
style='mso-bidi-font-style:normal'>Circle</i>.</p>

<p class=MsoNormal>Здесь следует учитывать различия между параметром-значением
и параметром-переменной. Параметр-переменная – это указатель на фактический
объект, передаваемый как параметр, а параметр-значение является только <i
style='mso-bidi-font-style:normal'>копией</i> фактического параметра.<span
style='mso-spacerun:yes'>  </span>Эта копия включает только те поля и методы,
которые включены в тип формального параметра. Если формальный параметр описан
как параметр-переменная,<span style='mso-spacerun:yes'>  </span>то фактический
параметр остается <i style='mso-bidi-font-style:normal'>неизмененным</i>.</p>

<p class=MsoNormal>Если формальный параметр описан как указатель на какой-либо
тип объекта, то фактический параметр также может быть указателем на этот тип
объекта или указателем на любой из производных от него типов. При заголовке
процедуры:</p>

<p class=spase><span style='mso-spacerun:yes'> </span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>procedure</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Figure.Add(NewFigure : PointPtr); <o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:0cm'>в качестве ее фактического параметра
нельзя использовать только <i style='mso-bidi-font-style:normal'>LocationPtr</i>.
Последнее, как будет показано ниже, лежит в основе позднего связывания.</p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal style='margin-left:35.4pt;text-indent:-14.15pt;mso-list:
l4 level1 lfo7'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='mso-fareast-font-family:Baltica;mso-bidi-font-family:Baltica'><span
style='mso-list:Ignore'>8.4. </span></span></b><![endif]><b style='mso-bidi-font-weight:
normal'>Наследование правил и полиморфизм <o:p></o:p></b></p>

<p class=spase><span style='mso-spacerun:yes'> </span></p>

<p class=MsoNormal><span style='color:black'>Наследование<b style='mso-bidi-font-weight:
normal'> </b></span>полей данных представляет собой достаточно узкую область
всего механизма наследования в ООП. Поля данных наследуются <i
style='mso-bidi-font-style:normal'>всегда</i>. В порожденном объекте<span
style='mso-spacerun:yes'>  </span>эти поля переопределять <i style='mso-bidi-font-style:
normal'>нельзя</i>. Иначе говоря, если поле данных уже определено в иерархии
объектов, никакой производный тип не может иметь поле данных с точно таким же
именем. </p>

<p class=MsoNormal>Более сложным и разнообразным является механизм наследо­вания
методов. В одном из вариантов предполагается, что методы предка наследуются так
же само, как и поля данных, но, при желании, они могут быть переопределены с сохранением
<i style='mso-bidi-font-style:normal'>прежних имен</i>. Для замены
унаследованного метода определяется новый метод с тем же именем, но с другим
телом и (при необходимости) с другим набором параметров. В этом случае
возникает очевидная неоднозначность в выборе варианта метода при его вызове.
Для статических объектов (см. ниже) неоднозначность устраняется с помощью
явного указания имени объекта, в котором инкапсулирован этот метод, т. е. для
вызова метода используется спецификация <i style='mso-bidi-font-style:normal'>Ancestor.Method</i>,
где <i style='mso-bidi-font-style:normal'>Ancestor</i> является именем прародительского
типа объекта, а <i style='mso-bidi-font-style:normal'>Method</i> – имя
наследуемого метода.</p>

<p class=MsoNormal>Пояснить это можно на примере объекта <i style='mso-bidi-font-style:
normal'>Circle</i>:</p>

<p class=spase><span style='mso-spacerun:yes'> </span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>Circle = <b style='mso-bidi-font-weight:normal'>object</b>(Point)
<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Radius : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Init(InitX, InitY :
Integer; InitRadius : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Show; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Hide; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Expand(ExpandBy :
Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> MoveTo(NewX, NewY :
Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Contract(ContractBy :
Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>procedure</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Circle.Init(InitX, InitY : Integer; InitRadius : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Point.Init(InitX,
InitY); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Radius := InitRadius; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end; </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span><o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>procedure</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Circle.Show; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible := True; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Graph.Circle(X, Y,
Radius); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end;<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>procedure</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Circle.Hide; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>var <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>TempColor : Word; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>TempColor :=
Graph.GetColor; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Graph.SetColor(GetBkColor);
<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible := False;
Graph.Circle(X, Y, Radius); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Graph.SetColor(TempColor)<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end;</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>procedure </span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>Circle.Expand(ExpandBy :<b style='mso-bidi-font-weight:normal'> </b>Integer);<b
style='mso-bidi-font-weight:normal'> <o:p></o:p></b></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Hide; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Radius := Radius +
ExpandBy; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>if Radius &lt; 0 then
Radius := 0; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Show<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end; </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span><o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>procedure</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Circle.Contract(ContractBy : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Expand(-ContractBy) <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>procedure</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Circle.MoveTo(NewX, NewY : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Hide; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>X := NewX; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Y := NewY; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Show<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end;<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></b></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal>Этот объект имеет только одно &quot;собственное&quot; поле <i
style='mso-bidi-font-style:normal'>Radius</i>, и все поля данных, которые он
унаследовал от объекта <i style='mso-bidi-font-style:normal'>Point</i>, т. е.
поля <i style='mso-bidi-font-style:normal'>X, Y,</i> и <i style='mso-bidi-font-style:
normal'>Visible</i>. Правила <i style='mso-bidi-font-style:normal'>GetX </i>и <i
style='mso-bidi-font-style:normal'>GetY</i> наследуются от объекта <i
style='mso-bidi-font-style:normal'>Location</i> без изменений.</p>

<p class=MsoNormal>Наличие нового поля <i style='mso-bidi-font-style:normal'>Radius</i>
потребует изменений в методе <i style='mso-bidi-font-style:normal'>Init</i> для
инициализации не только унаследованных полей, но и поля <i style='mso-bidi-font-style:
normal'>Radius</i>. Вместо непосредственнго присваивания значений
унаследованным полям <i style='mso-bidi-font-style:normal'>X, Y и Visible</i>,
в методе <i style='mso-bidi-font-style:normal'>Circle.Init</i> используется
унаследованный метод <i style='mso-bidi-font-style:normal'>Point.Init</i>.
После вызова <i style='mso-bidi-font-style:normal'>Point.Init</i>,<span
style='mso-spacerun:yes'>  </span>в теле <i style='mso-bidi-font-style:normal'>Circle.Init</i>
выполняется присваивание полю <i style='mso-bidi-font-style:normal'>Radius</i>
значения фактического параметра, переданного на месте формального параметра <i
style='mso-bidi-font-style:normal'>InitRadius</i>.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>      </span>Вместо того,
чтобы “показывать” и “прятать” круг в целом, а не точка за точкой, используется
процедура модуля <i style='mso-bidi-font-style:normal'>Graph</i>. В этом случае
для объекта <i style='mso-bidi-font-style:normal'>Cirсle</i> понадобятся новые
методы <i style='mso-bidi-font-style:normal'>Show</i> и <i style='mso-bidi-font-style:
normal'>Hide</i>, которые заменяют аналогичные для объекта <i style='mso-bidi-font-style:
normal'>Point</i>.. </p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=remarc><span style='mso-tab-count:1'>      </span>Вызов Graph.Circle в
методе<span style='font-style:normal'> </span>Circle.Show указывает на
подпрограмму Circle в модуле Graph, а не на тип объекта Circle. </p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>В определении объекта <i style='mso-bidi-font-style:normal'>Circle</i>
также заменен метод <i style='mso-bidi-font-style:normal'>MoveTo</i> объекта <i
style='mso-bidi-font-style:normal'>Point</i>, о чем свидетельствует
спецификатор (префикс) объекта <i style='mso-bidi-font-style:normal'>Circle</i>
перед идентификатором <i style='mso-bidi-font-style:normal'>MoveTo</i>. При
этом замененный метод не использует поле <i style='mso-bidi-font-style:normal'>Radius
</i><span style='mso-spacerun:yes'> </span>и в нем отсутствует вызов <i
style='mso-bidi-font-style:normal'>Graph.Circle</i> для рисования круга, т. е. <i
style='mso-bidi-font-style:normal'>Circle.MoveTo</i> полностью повторяет
формулировку <i style='mso-bidi-font-style:normal'>Point.MoveTo</i>, что может
вызвать некоторую растерянность и объясняется следующим.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>      </span>Все методы,
рассматриваемые до сих пор в связи с типами объектов <i style='mso-bidi-font-style:
normal'>Location</i>, <i style='mso-bidi-font-style:normal'>Point</i> и <i
style='mso-bidi-font-style:normal'>Circle</i>, являлись статическими. Термин
&quot;статические&quot;<span style='mso-spacerun:yes'>  </span>(<i
style='mso-bidi-font-style:normal'>sta</i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'>t</span>ic</i>) здесь используется
применительно к методам, которые не являются &quot;виртуальными&quot; – <i
style='mso-bidi-font-style:normal'>virtual</i>). </p>

<p class=MsoNormal>Особенности статических методов таковы: пока копия метода <i
style='mso-bidi-font-style:normal'>MoveTo</i> не будет помещена в контекст
объекта <i style='mso-bidi-font-style:normal'>Сircle</i> для замены метода <i
style='mso-bidi-font-style:normal'>MoveTo</i> объекта <i style='mso-bidi-font-style:
normal'>Point</i>, метод не будет выполнять нужные действия, если он вызывается
из объекта типа <i style='mso-bidi-font-style:normal'>Circle</i>. При вызове
для объекта<i style='mso-bidi-font-style:normal'> Circle</i> метода <i
style='mso-bidi-font-style:normal'>MoveTo</i> объекта <i style='mso-bidi-font-style:
normal'>Point</i> на экране будет передвигаться не круг, а точка. Только если
объект <i style='mso-bidi-font-style:normal'>Circle</i> вызывает копию <i
style='mso-bidi-font-style:normal'>MoveTo</i>, определенную как <i
style='mso-bidi-font-style:normal'>Circle.MoveTo</i> круг будет “показан” и
“спрятан” вложенными вызовами <i style='mso-bidi-font-style:normal'>Show</i> и <i
style='mso-bidi-font-style:normal'>Hide</i>. </p>

<p class=MsoNormal>Последнее определяется способом компиляции статических
методов. При компиляции методов объекта <i style='mso-bidi-font-style:normal'>Point
</i>в коде метода <i style='mso-bidi-font-style:normal'>Point.MoveTo</i>
используются вызовы <i style='mso-bidi-font-style:normal'>Point.Show</i> и <i
style='mso-bidi-font-style:normal'>Point.Hide </i>в соответствии с описанием
метода:</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>procedure</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Point.MoveTo(NewX, NewY :<b style='mso-bidi-font-weight:normal'>
integer</b>); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Hide; {</span>вызывает</i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Point.Hide} <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>X := NewX; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Y := NewY; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Show; {</span>вызывает</i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Point.Show} <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>end</i></b><i style='mso-bidi-font-style:
normal'>; <o:p></o:p></i></p>

<p class=spase><span style='mso-spacerun:yes'> </span></p>

<p class=MsoNormal>Таким образом вызов <i style='mso-bidi-font-style:normal'>Point.MoveTo
</i>предполагает вызовы <i style='mso-bidi-font-style:normal'>Point.Show</i> и <i
style='mso-bidi-font-style:normal'>Point.Hide</i>. Если бы объект <i
style='mso-bidi-font-style:normal'>Circle</i> наследовал метод объекта <i
style='mso-bidi-font-style:normal'>Point</i>, последний исполнялся бы так, как
был ранее откомпилирован. Вместо <i style='mso-bidi-font-style:normal'>Circle.Show</i>
и <i style='mso-bidi-font-style:normal'>Circle.Hide </i>выполнялись бы <i
style='mso-bidi-font-style:normal'>Point.Show</i> и <i style='mso-bidi-font-style:
normal'>Point.Hide</i> и перемещалась точка, а не круг. При <i
style='mso-bidi-font-style:normal'>переопределении</i> метода в его код включаются
вызовы процедур <i style='mso-bidi-font-style:normal'>Show</i> и <i
style='mso-bidi-font-style:normal'>Hide</i>, определенные в его контексте, то
есть <i style='mso-bidi-font-style:normal'>Circle.Show</i> и <i
style='mso-bidi-font-style:normal'>Circle.Hide</i>.</p>

<p class=MsoNormal>Логика “работы” компилятора при вызове статических методов
такова: когда вызывается метод, компилятор сначала ищет метод с таким именем,
определенный в пределах типа объекта. Поскольку методы с именами <i
style='mso-bidi-font-style:normal'>Init</i>, <i style='mso-bidi-font-style:
normal'>Show</i>, <i style='mso-bidi-font-style:normal'>Hide</i>, и <i
style='mso-bidi-font-style:normal'>MoveTo </i>переопределены в объекте<i
style='mso-bidi-font-style:normal'> Circle</i>, компилятор использует вызов
одного из перечисленных методов. Если метод с таким именем не найден в пределах
типа объекта, то компилятор переходит к типу непосредственного прародителя, и
снова ищет указанный метод. При положительном исходе вызов метода потомка
заменяется вызовом метода прародителя. В противном случае продолжается поиск
вверх по дереву порождения. Отсутствие метода в корне дерева вызывает сообщение
об ошибке, свидетельствующее о том, что такое правило в данной коллекции не
определено.</p>

<p class=spase><span style='mso-spacerun:yes'> </span></p>

<p class=remarc>При этом важно учитывать, что если метод прародителя вызывает
другие методы, то эти методы также принадлежат прародителю, даже если у
потомков эти методы переопределены.</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>8.4. Виртуальные
методы и полиморфизм.</b> </p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Рассмотренные ранее методы объектов были названы
статическими (<i style='mso-bidi-font-style:normal'>static</i>) так же, как и
статические переменные, которые, в отличие от динамических, размещаются в
памяти <i style='mso-bidi-font-style:normal'>во время трансляции</i>. Выше
описанный способ вызова методов называют <i style='mso-bidi-font-style:normal'>ранним
связыванием </i>(<i style='mso-bidi-font-style:normal'>early binding</i>).
Однако, по аналогии с динамическим распределением памяти, можно предполагать,
что, существует возможность определения вызова метода не во время трансляции, а
в процессе <i style='mso-bidi-font-style:normal'>выполнения</i> программы. Для
принятия решения о том, какой метод (с одним и тем же именем) должен быть
вызван во время выполнения программы необходимы некоторые механизмы. В
средствах <i style='mso-bidi-font-style:normal'><span style='font-size:8.0pt;
mso-bidi-font-size:10.0pt'>ООП</span></i> <i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'>Borland</span> Pascal</i> такой
механизм, связан с понятием <i style='mso-bidi-font-style:normal'>виртуального</i>
метода. </p>

<p class=MsoNormal>В общем случае статические методы не определяют свойство
полиморфизма (<i style='mso-bidi-font-style:normal'>polimorphic</i>), поскольку
имя метода должно задаваться с префиксом, т. е. по сути является новым именем.
Виртуальные методы характеризуются этим свойством в полной мере, позволяя
использовать в иерархии объектов одно и то же имя для однотипных по смыслу
действий, каждое из которых реализуется собственным, пригодным для него способом.
При этом то, какой из методов необходим, будет определяться в процессе <i
style='mso-bidi-font-style:normal'>выполнения</i> программы (так называемое <i
style='mso-bidi-font-style:normal'>позднее связывание – late binding</i>). </p>

<p class=MsoNormal>Так, например, тип объекта в рассматриваемой иерархии
геометрических фигур представляет отдельный тип<span style='mso-spacerun:yes'> 
</span>фигуры на экране: точку или круг. Для определения объектов,
соответствующих другим фигурам (линии, квадрату, дуге и т. п.), потребуется
описать методы для каждого объекта, которые “показывают” или “перемещают” эти
объекты на экране. </p>

<p class=MsoNormal>Общим для всех типов фигур является то, что их можно
“показывать” или “перемещать”. В этом смысле все они одинаковы. Отличие же этих
типов друг от друга заключается в <i style='mso-bidi-font-style:normal'>способе</i>,
которым каждый объект рисуется на экране. Точка рисуется подпрограммой
графического построения точки, для которой нужно только местонахождение <i
style='mso-bidi-font-style:normal'>X,Y</i>. Для рисования круга потребуется отдельная
графическая подпрограмма, для которой будут необходимы не только координаты, но
и радиус. Дуге, к примеру, нужен начальный угол и конечный угол, а также более
сложная процедура рисования. При позднем связывании имя соответствующего метода
(<i style='mso-bidi-font-style:normal'>Show</i> или<i style='mso-bidi-font-style:
normal'> MoveTo</i>) используется для показа в буквальном смысле многих форм
или, иначе говоря, является полиморфным. Виртуальность, как понятие, в данном
случае говорит о том, что при вызове метода определяется само действие, а не способ,
которым оно реализуется.</p>

<p class=MsoNormal>В этом случае может оказаться полезной такая аналогия:
разница между вызовом статического правила и вызовом виртуального правила – это
разница между решением, принимаемым на стадии планирования, и решением,
принятие которого откладывается на неопределенное время.</p>

<p class=MsoNormal>Если рассматривать аналогию в связи с вызовом метода <i
style='mso-bidi-font-style:normal'>MoveTo</i> в предыдущем примере, то кажется
очевидным, что для вызова <i style='mso-bidi-font-style:normal'>Circle.</i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>M</span>oveTo</i> достаточно раннего связывания, поскольку <i
style='mso-bidi-font-style:normal'>Circle.MoveTo</i> будет заменено на <i
style='mso-bidi-font-style:normal'>MoveTo</i> ближайшего предка – объекта <i
style='mso-bidi-font-style:normal'>Point</i> (здесь нужно отметить, что эти
методы по коду совпадают). Предполагая, что в<span style='mso-spacerun:yes'> 
</span>производных типах для других фигур метод не переопределен, можно
утверждать следующее: любой производный тип от объекта <i style='mso-bidi-font-style:
normal'>Point</i> будет вызывать ту же самую реализацию правила <i
style='mso-bidi-font-style:normal'>MoveTo</i>. Такое решение может быть принято
во время компиляции, и с этим, собственно, можно мириться. </p>

<p class=MsoNormal>Однако, когда метод <i style='mso-bidi-font-style:normal'>MoveTo</i>
вызывает <i style='mso-bidi-font-style:normal'>Show</i>, принятие решения на
стадии компиляции крайне нежелательно, поскольку каждый тип фигуры имеет
собственную реализацию метода <i style='mso-bidi-font-style:normal'>Show</i>.
Какая именно реализация <i style='mso-bidi-font-style:normal'>Show</i>
вызывается для <i style='mso-bidi-font-style:normal'>MoveTo</i>, полностью
зависит от того, какой <i style='mso-bidi-font-style:normal'>экземпляр</i>
объекта вызвал этот метод, а эта информация недоступна во время компиляции. Поэтому
вызов правила <i style='mso-bidi-font-style:normal'>Show</i> в пределах
реализации <i style='mso-bidi-font-style:normal'>MoveTo</i> должен быть
отложенным решением (определен поздним связыванием).</p>

<p class=MsoNormal>В основу механизма реализации позднего связывания может быть
положена абстракция действий через параметризацию. Действительно, описание
метода, достаточное для его компиляции, может строиться на указании формального
параметра-переменной, который в процессе выполнения может заменяться
фактическим параметром – любым из производных типов, полученных от типа
фактического параметра (см. совместимость типов объектов). Здесь можно
отметить, что в <i style='mso-bidi-font-style:normal'>Borland Pascal</i> этот
механизм реализуется посредством специальной таблицы<i style='mso-bidi-font-style:
normal'> </i>VMT, определяющей точки вызова требуемых виртуальных методов. </p>

<p class=MsoNormal><span style='mso-tab-count:1'>      </span>Метод
определяется как<span style='mso-spacerun:yes'>  </span>виртуальный, когда за
его описанием в типе объекта ставится зарезервированное слово <i
style='mso-bidi-font-style:normal'>virtual</i>. </p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=remarc>С таким описанием связано жесткое ограничение: если метод в
прародительском типе определен как виртуальный, то все методы потомков с тем же
именем также должны быть описаны как virtual. Смысл ограничения определяется
механизмом вызова виртуальных методов. </p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Описание типов рассмотренных выше графических объектов с
использованием виртуальных методов сводится к следующему:</p>

<p class=spase><span style='mso-spacerun:yes'> </span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>type <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Location = <b
style='mso-bidi-font-weight:normal'>object </b><span
style='mso-spacerun:yes'> </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>X, Y : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Init(InitX, InitY :
Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> GetX : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> GetY : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Point = <b
style='mso-bidi-font-weight:normal'>object</b>(Location) <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible : Boolean; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>constructor</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Init(InitX, InitY :
Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Show; <b
style='mso-bidi-font-weight:normal'>virtual</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Hide; <b
style='mso-bidi-font-weight:normal'>virtual</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> IsVisible : Boolean; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> MoveTo(NewX, NewY :
Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Circle = <b
style='mso-bidi-font-weight:normal'>object</b>(Point) <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Radius : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>constructor</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Init(InitX, InitY :<b
style='mso-bidi-font-weight:normal'> </b>Integer; InitRadius : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Show;<b
style='mso-bidi-font-weight:normal'> virtual</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Hide; <b
style='mso-bidi-font-weight:normal'>virtual</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Expand(ExpandBy :<b
style='mso-bidi-font-weight:normal'> </b>Integer); <b style='mso-bidi-font-weight:
normal'>virtual</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Contract(ContractBy :
Integer);<b style='mso-bidi-font-weight:normal'> virtual</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>end</i></b><i style='mso-bidi-font-style:
normal'>;<span style='mso-spacerun:yes'>   </span><o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span style='mso-tab-count:1'>      </span>В примере
описания типов необходимо прежде всего отметить, что метод <i style='mso-bidi-font-style:
normal'>MoveTo</i> исключен из определения типа объекта <i style='mso-bidi-font-style:
normal'>Circle</i>. Последний больше не нуждается в замене <i style='mso-bidi-font-style:
normal'>MoveTo</i> объекта <i style='mso-bidi-font-style:normal'>Point</i> не
измененной копией, откомпилированной в своем собственном контексте. Метод может
теперь быть унаследован от <i style='mso-bidi-font-style:normal'>Point</i>,
причем все его вложенные вызовы переходят к методам объекта <i
style='mso-bidi-font-style:normal'>Circle</i>, а не к методам объекта <i
style='mso-bidi-font-style:normal'>Point</i>.</p>

<p class=MsoNormal>Кроме того, следует отметить использование нового служебного
слова <i style='mso-bidi-font-style:normal'>constructor</i> (конструктор),
которое заменило зарезервированное слово <i style='mso-bidi-font-style:normal'>procedure</i><span
style='mso-spacerun:yes'>  </span>для <i style='mso-bidi-font-style:normal'>Point.Init</i>
и <i style='mso-bidi-font-style:normal'>Circle.Init</i> при описании метода
инициализации в списке методов полиморфных объектов. Традиционное имя метода
инициализации (<i style='mso-bidi-font-style:normal'>Init</i>)<i
style='mso-bidi-font-style:normal'> </i><span
style='mso-spacerun:yes'> </span>по-прежнему сохраняется. Все типы объектов, которые
имеют виртуальные методы, должны иметь конструктор. Конструктор – это особый
вид процедуры, которая выполняет некоторую установочную работу для механизма реализации
виртуальных методов. Более того, конструктор должен вызываться до вызова
виртуального метода. Вызов виртуального метода без предварительного вызова
конструктора может вызвать тупиковое состояние (компилятор не сможет проверить
порядок вызова методов). При этом каждый отдельный экземпляр объекта должен
быть инициализирован отдельным вызовом конструктора. В этом случае недостаточно
инициализировать один экземпляр объекта и затем присвоить этот экземпляр
дополнительным экземплярам. Дополнительные экземпляры не будут инициализированы
оператором присваивания, и, при вызове их виртуальных методов, возникнет ошибка
времени выполнения. </p>

<p class=MsoNormal>Необходимость конструкторов обусловлена тем, что для вызова
виртуальных методов применительно к каждому экземпляру объекта используется так
называемая таблица виртуальных правил – VMT (<i style='mso-bidi-font-style:
normal'>V</i>irtual <i style='mso-bidi-font-style:normal'>M</i>etods <i
style='mso-bidi-font-style:normal'>T</i>able). Эта таблица содержит размер типа
объекта, и, для каждого из его виртуальных методов, указатель на точку вызова
соответствующего кода (Рис.8.2.).<span style='letter-spacing:-.2pt'> Конструктор
же устанавливает <i style='mso-bidi-font-style:normal'>связь</i> между <i
style='mso-bidi-font-style:normal'>экземпляром</i>, вызывающим этот
конструктор, и таблицей виртуальных правил<span style='mso-spacerun:yes'> 
</span>данного типа объекта.</span> </p>

<div style='mso-element:frame;mso-element-frame-hspace:9.0pt;mso-element-wrap:
around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
margin;mso-element-top:21.55pt;mso-height-rule:exactly'>

<table cellspacing=0 cellpadding=0 hspace=0 vspace=0 align=left>
 <tr>
  <td valign=top align=left style='padding-top:0cm;padding-right:9.0pt;
  padding-bottom:0cm;padding-left:9.0pt'>
  <p class=MsoNormal style='text-indent:0cm;mso-element:frame;mso-element-frame-hspace:
  9.0pt;mso-element-wrap:around;mso-element-anchor-vertical:paragraph;
  mso-element-anchor-horizontal:margin;mso-element-top:21.55pt;mso-height-rule:
  exactly'><!--[if gte vml 1]><v:shape id="_x0000_i1026" type="#_x0000_t75"
   style='width:144.75pt;height:84.75pt' o:ole="">
   <v:imagedata src="8.%20Oбъектнo-ориентированная%20технология%20программирования.files/image003.wmz"
    o:title=""/>
  </v:shape><![endif]--><![if !vml]><img width=193 height=113
  src="8.%20Oбъектнo-ориентированная%20технология%20программирования.files/image004.gif"
  v:shapes="_x0000_i1026"><![endif]><!--[if gte mso 9]><xml>
   <o:OLEObject Type="Embed" ProgID="Word.Document.8" ShapeID="_x0000_i1026"
    DrawAspect="Content" ObjectID="_1370318754">
   </o:OLEObject>
  </xml><![endif]--></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal>Для каждого типа объекта существует только одна таблица
виртуальных правил. Отдельные экземпляры типа объекта содержат указатель на <i
style='mso-bidi-font-style:normal'>VMT</i>, но не саму таблицу (иными словами
можно сказать, что в “машинном” представлении полиморфного объекта поля виртуальных
методов заменяются ссылкой на соответствующую объекту <span lang=EN-US
style='mso-ansi-language:EN-US'>VMT</span>). Конструктор устанавливает значение
этого указателя. Поэтому вызов конструктора должен предшествовать вызову
виртуального метода и виртуальный метод недоступен при инициализации экземпляра
объекта, например, с помощью оператора присваивания. </p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=remarc>Вызовы виртуальных методов желательно проверять на статус
инициализации того экземпляра, который делает вызов. Осуществить такую проверку
позволяет директива транслятора ($R+). Вызов экземпляра, не инициализированного
своим конструктором, будет отмечен сообщением об ошибке (положение
переключателя по умолчанию – неактивное или $R-).<span
style='mso-spacerun:yes'>  </span>Если есть уверенность в том, что в программе
отсутствуют вызовы методов неинициализированными экземплярами объектов,
желательно не активизировать директиву, поскольку проверка существенно
“замедлит” работу программы.</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>При этом важно помнить, что если метод в прародительском
типе определен как виртуальный, то все методы потомков с тем же именем также
должны быть описаны как <i style='mso-bidi-font-style:normal'>virtual</i>.
Кроме того, имя виртуального метода не должно <i style='mso-bidi-font-style:
normal'>никоим</i> образом изменяться в направлении вниз по дереву порождения.
По этой причине заголовки всех процедур или функций, описывающих реализацию
виртуального метода с одним и тем же именем должны быть одинаковы, вплоть до
числа и типа параметров. Со статическими правилами ситуация иная: статическое
правило,<span style='mso-spacerun:yes'>  </span>заменяющее другое статическое
правило, может иметь (при необходимости) другие типы и количество параметров. </p>

<p class=MsoNormal>Для иллюстрации возможностей применения раннего и позднего
связывания ниже рассматривается следующая задача. Пусть необходимо создать
модуль, который экспортирует некоторые объекты графических фигур<span
style='mso-spacerun:yes'>  </span>и универсальные средства
&quot;буксировки&quot; этих фигур на экране с помощью клавиш-навигаторов
(клавиш со стрелками) или манипулятора –”мыши”. Модуль будет называется <i
style='mso-bidi-font-style:normal'>Figures</i> и определять тип объекта для
графической фигуры, вид которой заранее неизвестен, а также использовать
виртуальные правила для буксировки этой фигуры.<span
style='mso-spacerun:yes'>   </span></p>

<p class=MsoNormal>&Agrave;&aacute;&ntilde;&ograve;&eth;&agrave;&ecirc;&ouml;&egrave;&yuml;
<i style='mso-bidi-font-style:normal'>Figures </i>может быть сформулирована на
основе общих свойств всех возможных фигур и их отличительных особенностей.
Различия очевидны: это формы (линии, углы и кривые, рисуемые на экране). Общие
свойства всех фигур определяются следующими атрибутами: </p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=bulet style='margin-left:0cm;text-indent:0cm;mso-list:l0 level1 lfo1'><![if !supportLists]><span
style='font-size:7.0pt;mso-bidi-font-size:10.0pt;font-family:Wingdings;
mso-fareast-font-family:Wingdings;mso-bidi-font-family:Wingdings;mso-ansi-language:
RU'><span style='mso-list:Ignore'>n<span style='font:7.0pt "Times New Roman"'> </span></span></span><![endif]><span
style='mso-ansi-language:RU'>&ocirc;&egrave;&atilde;&oacute;&eth;&ucirc;
&egrave;&igrave;&aring;&thorn;&ograve;
&igrave;&aring;&ntilde;&ograve;&icirc;&iacute;&agrave;&otilde;&icirc;&aelig;&auml;&aring;&iacute;&egrave;&aring;,
&ccedil;&agrave;&auml;&agrave;&iacute;&iacute;&icirc;&aring;
&ecirc;&icirc;&icirc;&eth;&auml;&egrave;&iacute;&agrave;&ograve;&agrave;&igrave;&egrave;<i
style='mso-bidi-font-style:normal'> </i></span><i style='mso-bidi-font-style:
normal'><span lang=EN-US>X</span></i><span style='mso-ansi-language:RU'>
&egrave;<i style='mso-bidi-font-style:normal'> </i></span><i style='mso-bidi-font-style:
normal'><span lang=EN-US>Y</span></i><span style='mso-ansi-language:RU'>
(&iacute;&aring;&ecirc;&icirc;&ograve;&icirc;&eth;&agrave;&yuml;
&ograve;&icirc;&divide;&ecirc;&agrave;
&acirc;&iacute;&oacute;&ograve;&eth;&egrave;
&ocirc;&egrave;&atilde;&oacute;&eth;&ucirc;,
&euml;&aring;&aelig;&agrave;&ugrave;&agrave;&yuml; &acirc;
&yacute;&ograve;&icirc;&eacute;
&iuml;&icirc;&ccedil;&egrave;&ouml;&egrave;&egrave;,
&iacute;&agrave;&ccedil;&ucirc;&acirc;&agrave;&aring;&ograve;&ntilde;&yuml;
&quot;&yuml;&ecirc;&icirc;&eth;&iacute;&icirc;&eacute;
&ograve;&icirc;&divide;&ecirc;&icirc;&eacute;&quot;
&yacute;&ograve;&icirc;&eacute; &ocirc;&egrave;&atilde;&oacute;&eth;&ucirc;); <o:p></o:p></span></p>

<p class=bulet style='margin-left:0cm;text-indent:0cm;mso-list:l0 level1 lfo1'><![if !supportLists]><span
style='font-size:7.0pt;mso-bidi-font-size:10.0pt;font-family:Wingdings;
mso-fareast-font-family:Wingdings;mso-bidi-font-family:Wingdings;mso-ansi-language:
RU'><span style='mso-list:Ignore'>n<span style='font:7.0pt "Times New Roman"'> </span></span></span><![endif]><span
style='mso-ansi-language:RU'>&ocirc;&egrave;&atilde;&oacute;&eth;&ucirc;
&igrave;&icirc;&atilde;&oacute;&ograve; &aacute;&ucirc;&ograve;&uuml;
&euml;&egrave;&aacute;&icirc;
&acirc;&egrave;&auml;&egrave;&igrave;&ucirc;&igrave;&egrave;,
&euml;&egrave;&aacute;&icirc; &iacute;&aring;&acirc;&egrave;&auml;&egrave;&igrave;&ucirc;&igrave;&egrave;,
&divide;&ograve;&icirc;
&icirc;&iuml;&eth;&aring;&auml;&aring;&euml;&yuml;&aring;&ograve;&ntilde;&yuml;
&aacute;&oacute;&euml;&aring;&acirc;&icirc;&eacute;
&acirc;&aring;&euml;&egrave;&divide;&egrave;&iacute;&icirc;&eacute; </span><i
style='mso-bidi-font-style:normal'><span lang=EN-US>True</span></i><span
style='mso-ansi-language:RU'><span style='mso-spacerun:yes'>  </span>–
&acirc;&egrave;&auml;&egrave;&igrave;&agrave;&yuml; &egrave;&euml;&egrave; </span><i
style='mso-bidi-font-style:normal'><span lang=EN-US>False</span></i><span
style='mso-ansi-language:RU'><span style='mso-spacerun:yes'>  </span>–
&iacute;&aring;&acirc;&egrave;&auml;&egrave;&igrave;&agrave;&yuml;.<o:p></o:p></span></p>

<p class=spase><span style='mso-spacerun:yes'> </span></p>

<p class=MsoNormal>Эти атрибуты в точности соответствуют характеристикам типов
объектов <i style='mso-bidi-font-style:normal'>Location</i> и <i
style='mso-bidi-font-style:normal'>Point</i>. Объект <i style='mso-bidi-font-style:
normal'>Point</i> представляет собой, в сущности, абстрактный тип объекта, от
которого все объекты графических фигур являются производными. В рассматриваемом
случае никакой экземпляр объекта типа Point не потребуется “рисовать” на экране,
хотя вызов <i style='mso-bidi-font-style:normal'>Point.Show</i><span
style='mso-spacerun:yes'>  </span>позволяет “показать” точку. Поэтому тип
объекта, специально созданный для порождения потомков наследуемыми свойствами,
собственно и называется абстрактным типом.</p>

<p class=MsoNormal>&Agrave;&aacute;&ntilde;&ograve;&eth;&agrave;&ecirc;&ograve;&iacute;&ucirc;&eacute;
объект, кроме того, позволяет при необходимости дополнить все порожденные
объекты новым общим для них свойством не затрагивая при этом описания потомков.
Так, например, необходимость поддержки цвета применительно ко всем типам
объектов, производных от объекта <i style='mso-bidi-font-style:normal'>Point</i>,
потребует изменений только в описании типа <i style='mso-bidi-font-style:normal'>Point</i><span
style='letter-spacing:-.2pt'>. Методы для передвижения любой фигуры в текущую
позицию указателя &quot;мыши&quot; также не потребуются. Для этого достаточно
дополнить соответствующим методом описание <i style='mso-bidi-font-style:normal'>Point</i>,
так как этот метод будет влиять только на два поля – <i style='mso-bidi-font-style:
normal'>X</i> и <i style='mso-bidi-font-style:normal'>Y</i>. <o:p></o:p></span></p>

<p class=MsoNormal><span style='letter-spacing:-.2pt'>&Icirc;&auml;&iacute;&agrave;&ecirc;&icirc;,
&icirc;чевидно, что для определения нового свойства, которое должно быть
реализовано для разных фигур по-разному, потребуется группа виртуальных
методов, причем каждый метод должен иметь свою реализацию.<o:p></o:p></span></p>

<p class=MsoNormal>В рассматриваемой задаче наибольший интерес представляет
буксировка произвольной графической фигуры по экрану в ответ на входные данные
пользователя. &Iacute;&agrave;&egrave;&aacute;&icirc;&euml;&aring;&aring;
&icirc;&divide;&aring;&acirc;&egrave;&auml;&iacute;&ucirc;&eacute;
&ntilde;пособ решения такой задачи, который связан с традиционной процедурной
технологией, заключается в том, что модуль <i style='mso-bidi-font-style:normal'>Figures</i>
будет экспортировать процедуру, которой в качестве параметра переменной
передается полиморфный объект, буксируемый по экрану. Такая процедура может
иметь вид: </p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>procedure</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> DragIt(var AnyFigure : Point; DragBy : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>var <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>DeltaX,DeltaY :
Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>FigureX,FigureY:
Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>begin <o:p></o:p></i></b></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'>AnyFigure.Show; {показывает фигуру,которая буксируется} <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'>FigureX := AnyFigure.GetX; {читает начальные значения } <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'>FigureY := AnyFigure.GetY; {координат X,Y буксируемой фигуры}<o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>while</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> GetDelta(DeltaX,
DeltaY) <b style='mso-bidi-font-weight:normal'>do</b><span
style='mso-spacerun:yes'>  </span>{</span>цикл</i><i style='mso-bidi-font-style:
normal'><span style='mso-ansi-language:EN-US'> </span>буксировки</i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>}<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:42.55pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:49.65pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>FigureX := FigureX +
(DeltaX * DragBy);<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:49.65pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>FigureY := FigureY +
(DeltaY * DragBy); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:49.65pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>AnyFigure.MoveTo(FigureX,
FigureY)<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:42.55pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>end<o:p></o:p></i></b></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>end; <o:p></o:p></i></b></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=remarc>Процедура DragIt вызывает дополнительную процедуру GetDelta,
которая в примере не описана. Предполагается, что GetDelta получает приращения
координат DeltaX, DeltaY от пользователя. Они могут вводиться с клавиатуры,
посредством &quot;мыши&quot;, или с помощью другого устройства.</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&Icirc;тносительно <i style='mso-bidi-font-style:normal'>DragIt</i>
важно отметить, что любой объект типа <i style='mso-bidi-font-style:normal'>Point</i>,
или любой производный от него тип, может быть передан в качестве фактического параметра
вместо формального параметра-переменной <i style='mso-bidi-font-style:normal'>AnyFigure</i>.
Однако во время трансляции значение фактического параметра неизвестно.
Последнее не приводит к неоднозначности, поскольку <i style='mso-bidi-font-style:
normal'>DragIt</i> ссылается<span style='mso-spacerun:yes'>  </span>на имена полей
и методов, определенных только в типе <i style='mso-bidi-font-style:normal'>Point</i>.
По наследованию, эти имена также определены в любом производном типе от <i
style='mso-bidi-font-style:normal'>Point</i> и будут также определены в любом
потомке уже имеющихся типов. </p>

<p class=MsoNormal>Методы <i style='mso-bidi-font-style:normal'>GetX</i>, <i
style='mso-bidi-font-style:normal'>GetY</i> и <i style='mso-bidi-font-style:
normal'>MoveTo</i> являются статическими (это означает, что во время компиляции<i
style='mso-bidi-font-style:normal'> DragIt</i> известны точки вызова процедуры,
реализующей каждый метод). С другой стороны, метод <i style='mso-bidi-font-style:
normal'>Show</i>, как уже упоминалось, должен быть виртуальным. В этом случае
(при вызове <i style='mso-bidi-font-style:normal'>DragIt</i>) точка вызова
требуемой реализации <i style='mso-bidi-font-style:normal'>Show</i>
определяется в VMT<span style='mso-spacerun:yes'>  </span>экземпляром,
передаваемым в <i style='mso-bidi-font-style:normal'>AnyFigure</i> как параметр.
Таким образом <i style='mso-bidi-font-style:normal'>DragIt</i> сможет
&quot;буксировать&quot; любой производный от <i style='mso-bidi-font-style:
normal'>Point</i> тип по экрану, вне зависимости от того, известен этот тип во
время компиляции модуля, или нет. </p>

<p class=MsoNormal>Не смотря на то, что описанный способ буксировки вполне приемлем,
существует более эффективное решение такой задачи, свойственное ООП и связанное
с представлением процедуры <i style='mso-bidi-font-style:normal'>DragIt</i> в
виде метода (возможностью инкапсулировать это действие). </p>

<p class=MsoNormal>Прежде чем дополнять существующую иерархию объектов новым
методом, всегда необходимо определить, как высоко в этой иерархии он должен
быть помещен. Буксировка фигуры влечет за собой изменения в местонахождении фигуры
в ответ на входные данные, вводимые пользователем. Тогда, с учетом наследования,
метод <i style='mso-bidi-font-style:normal'>Drag</i> должен находится “рядом” с
<i style='mso-bidi-font-style:normal'>MoveTo</i>, поскольку любой объект, для
которого приемлем метод <i style='mso-bidi-font-style:normal'>MoveTo</i>,
должен также наследовать <i style='mso-bidi-font-style:normal'>Drag</i>. Иными
словами, <i style='mso-bidi-font-style:normal'>Drag</i> может быть включен в
список методов абстрактного объекта <i style='mso-bidi-font-style:normal'>Point</i>.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>      </span>Далее следует
определить, каким будет метод – статическим или виртуальным. Критерием “виртуализации”
любого метода служит вероятность изменения метода с учетом всего дерева
порождения. Метод <i style='mso-bidi-font-style:normal'>Drag</i> манипулирует
только позицией фигуры. Следовательно, необходимости делать его виртуальным,
по-видимому, нет. </p>

<p class=MsoNormal><span style='mso-tab-count:1'>      </span>&Icirc;&auml;&iacute;&agrave;&ecirc;&icirc;
&iuml;&eth;&egrave;&iacute;ятие подобных решений требует осторожности:
статический метод <i style='mso-bidi-font-style:normal'>Drag</i> заблокирует
все возможности для пользователей модуля <i style='mso-bidi-font-style:normal'>Figures</i>
изменять этот метод при расширении модуля. К примеру, метод <i
style='mso-bidi-font-style:normal'>Drag</i> может изменятся в связи с
обработкой событий, т. е.<span style='mso-spacerun:yes'> 
</span>&quot;перехватом&quot; входных данных либо от клавиатуры, либо от
&quot;мыши&quot;. Событие происходит непредсказуемо по времени. а обработка
таких данных должна производится по их получении. Кроме того, обработка событий
часто зависит от аппаратного обеспечения, а пользователю может понадобиться
новое устройство для ввода, которое не согласуется с имеющейся
&quot;версией&quot; <i style='mso-bidi-font-style:normal'>Drag</i>, и
пользователь будет бессилен переписать этот метод.<span
style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal>&Iuml;&icirc;&yacute;&ograve;&icirc;&igrave;&oacute;
&igrave;&aring;&ograve;&icirc;&auml; <i style='mso-bidi-font-style:normal'>Drag</i>
все же следует определять как виртуальный.<span style='mso-spacerun:yes'> 
</span>Процесс преобразования процедуры <i style='mso-bidi-font-style:normal'>DragIt</i>
в метод достаточно прост и заключается в пополнении списка методов объекта <i
style='mso-bidi-font-style:normal'>Point</i> заголовком соответствующей
процедуры (в рассматриваемом случае – <i style='mso-bidi-font-style:normal'>DragBy</i>):<span
style='mso-spacerun:yes'>  </span></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>Point = <b style='mso-bidi-font-weight:normal'>object</b>(Location)
<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible : Boolean; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>constructor</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Init(InitX, InitY :
Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Show; <b
style='mso-bidi-font-weight:normal'>virtual</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Hide; <b
style='mso-bidi-font-weight:normal'>virtual;</b> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> IsVisible : Boolean; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> MoveTo(NewX, NewY :
Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> DragBy(DragBy :
Integer); <b style='mso-bidi-font-weight:normal'>virtual</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>end</i></b><i style='mso-bidi-font-style:normal'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&Icirc;&iuml;&egrave;&ntilde;&agrave;&iacute;и&aring; самой
процедуры <i style='mso-bidi-font-style:normal'>DradIt</i> также потребует
изменений. Теперь правило <i style='mso-bidi-font-style:normal'>Drag</i>
является частью объекта <i style='mso-bidi-font-style:normal'>Point</i>.
Поэтому при ее формулировке не требуется уточнять имена методов в связи с
формальным параметром<i style='mso-bidi-font-style:normal'> AnyFigure</i> и, естественно,
использовать сам параметр. “Заботу” о том, какой экземпляр объекта вызывает
правило <i style='mso-bidi-font-style:normal'>Drag</i>, возьмет на себя неявный
параметр <i style='mso-bidi-font-style:normal'>Self</i> <span style='letter-spacing:
-.2pt'>(</span><span lang=EN-US style='letter-spacing:-.2pt;mso-ansi-language:
EN-US'>c</span><span style='letter-spacing:-.2pt'>формируется ссылка на
соответствующую типу экземпляра </span><span lang=EN-US style='letter-spacing:
-.2pt;mso-ansi-language:EN-US'>VMT</span><span style='letter-spacing:-.2pt'>). <o:p></o:p></span></p>

<p class=MsoNormal>&Ntilde; &oacute;&divide;&aring;&ograve;&icirc;&igrave;
&ntilde;&ecirc;&agrave;&ccedil;&agrave;&iacute;&iacute;&icirc;&atilde;&icirc;,
&iuml;олный исходный текст модуля <i style='mso-bidi-font-style:normal'><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt'>FIGURES</span></i> может быть
оформлен следующим образом.</p>

<p class=spase><span style='mso-spacerun:yes'>   </span></p>

<p class=MsoNormal style='text-indent:7.1pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>unit</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Figures;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:14.2pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>interface<span style='mso-spacerun:yes'> 
</span><o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>uses</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Graph, Crt;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>type <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Location = <b
style='mso-bidi-font-weight:normal'>object </b><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:3.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>X, Y : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:3.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Init(InitX, InitY :
Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:3.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> GetX : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:3.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> GetY : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:78.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end;<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>PointPtr =
^Point;<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Point = <b
style='mso-bidi-font-weight:normal'>object</b>(Location) <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible : Boolean; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>constructor</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Init(InitX, InitY :
Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>destructor</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Done; <b
style='mso-bidi-font-weight:normal'>virtual</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Show; <b
style='mso-bidi-font-weight:normal'>virtual</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Hide; <b
style='mso-bidi-font-weight:normal'>virtual</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> IsVisible : Boolean; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> MoveTo(NewX, NewY :
Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Drag(DragBy :
Integer); <b style='mso-bidi-font-weight:normal'>virtual</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>CirclePtr = ^Circle;<o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>Circle = <b style='mso-bidi-font-weight:normal'>object</b>(Point)
<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Radius : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>constructor</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Init(InitX, InitY :
Integer; InitRadius : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Show; <b
style='mso-bidi-font-weight:normal'>virtual</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Hide; <b
style='mso-bidi-font-weight:normal'>virtual</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Expand(ExpandBy :
Integer); <b style='mso-bidi-font-weight:normal'>virtual</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:70.9pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Contract(ContractBy :
Integer);<b style='mso-bidi-font-weight:normal'> virtual</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>; <o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:14.2pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>implementation</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>{</span>Реализация</i><i style='mso-bidi-font-style:
normal'><span style='mso-ansi-language:EN-US'> </span>методов</i><i
style='mso-bidi-font-style:normal'><span style='mso-ansi-language:EN-US'> </span>объекта</i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Location}<o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>procedure</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Location.Init(InitX, InitY : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>X :=InitX; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Y :=InitY; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>function</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Location.GetX : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>GetX := X; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>function</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Location.GetY : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>GetY := Y; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>end</i></b><i style='mso-bidi-font-style:
normal'>; <o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'>{Реализация методов
объекта Points}<span style='mso-spacerun:yes'>  </span><o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>constructor</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Point.Init(InitX, InitY : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Location.Init(InitX,
InitY); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible := False; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>; <o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>destructor</i></b><i style='mso-bidi-font-style:normal'> Point.Done;
{назначение деструкторов поясняется позднее}<o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Hide; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>procedure</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Point.Show; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible :=True; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>PutPixel(X, Y,
GetColor); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>procedure</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Point.Hide; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible :=False; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>PutPixel(X, Y,
GetBkColor); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>function</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Point.IsVisible :<b style='mso-bidi-font-weight:normal'> </b>Boolean; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>IsVisible := Visible; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>procedure</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Point.MoveTo(NewX, NewY : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Hide; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>X :=NewX; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Y :=NewY; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Show; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>function</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> GetDelta(var DeltaX,DeltaY : Integer) : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>var </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>KeyChar : Char; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Quit : Boolean; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>DeltaX :=0; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'>DeltaY :=0; {0 – нет изменений в положении} <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'>GetDelta :=</i><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>T</span>rue; {</i><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>T</span>rue –
возвращает дельту} <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>repeat</i></b><i
style='mso-bidi-font-style:normal'> KeyChar := ReadKey; {</i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>c</span>читывание нажатой клавиши} <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:42.55pt'><i style='mso-bidi-font-style:
normal'>Quit :=</i><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>T</span>rue; {используемая клавиша} <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:42.55pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>case</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Ord(KeyChar) <b
style='mso-bidi-font-weight:normal'>of</b> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:49.65pt'><i style='mso-bidi-font-style:
normal'>0: <b style='mso-bidi-font-weight:normal'>begin</b> {“0” означает
расширенный 2-байтовый код} <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:49.65pt'><i style='mso-bidi-font-style:
normal'>KeyChar := ReadKey; {читать второй байт кода} <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:2.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>case</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Ord(KeyChar) <b
style='mso-bidi-font-weight:normal'>of</b> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><i style='mso-bidi-font-style:
normal'>72: DeltaY :=-1; {стрелка вверх; декремент Y} <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><i style='mso-bidi-font-style:
normal'>80: DeltaY :=1; {стрелка вниз; инкремент Y} <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><i style='mso-bidi-font-style:
normal'>75: DeltaX :=-1; {стрелка влево; декремент X} <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><i style='mso-bidi-font-style:
normal'>77: DeltaX :=1; {стрелка вправо; инкремент X} <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:2.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>else</i></b><i style='mso-bidi-font-style:
normal'> Quit :=</i><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>F</span>alse; {игнорирует любой другой код} <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:2.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>; {case} <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:49.65pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:49.65pt'><i style='mso-bidi-font-style:
normal'>13: GetDelta :=</i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'>F</span>alse; {нажатие CR означает
“не дельта”} <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:49.65pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>else</i></b><i style='mso-bidi-font-style:
normal'> Quit :=</i><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>F</span>alse; {игнорирует все другие нажатия
клавиш} <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:49.65pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>; {case} <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>until</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Quit; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>procedure</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Point.Drag(DragBy : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>var</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>DeltaX, DeltaY :
Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>FigureX, FigureY :
Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>begin</i></b><i style='mso-bidi-font-style:
normal'> <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'>Show; {показ фигуры, которая будет буксироваться} <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'>FigureX := GetX; {возврат начального положения фигуры} <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>FigureY := GetY; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>while</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> GetDelta(DeltaX,
DeltaY) <b style='mso-bidi-font-weight:normal'>do</b> {</span>цикл</i><i
style='mso-bidi-font-style:normal'><span style='mso-ansi-language:EN-US'> </span>буксировки</i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>}<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:42.55pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>begin</i></b><i style='mso-bidi-font-style:
normal'> { Применяет дельту к фигуре X,Y: } <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:49.65pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>FigureX :=FigureX +
(DeltaX * DragBy); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:49.65pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>FigureY :=FigureY +
(DeltaY * DragBy); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:49.65pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>MoveTo(FigureX,
FigureY); {</span>перемещение</i><i style='mso-bidi-font-style:normal'><span
style='mso-ansi-language:EN-US'> </span>фигуры</i><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> } <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:42.55pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>end</i></b><i style='mso-bidi-font-style:
normal'>; <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>end</i></b><i style='mso-bidi-font-style:
normal'>; <o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'>{ Реализация методов бъекта Circle} <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>constructor</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Circle.Init(InitX,
InitY : Integer; InitRadius :<b style='mso-bidi-font-weight:normal'> </b>Integer);
<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:42.55pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Point.Init(InitX,
InitY); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:42.55pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Radius :=InitRadius; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Circle.Show; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:42.55pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible :=True; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:42.55pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Graph.Circle(X, Y,
Radius); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>procedure</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Circle.Hide; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>var</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>TempColor : Word; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>TempColor
:=Graph.GetColor; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Graph.SetColor(GetBkColor);
<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible :=<b
style='mso-bidi-font-weight:normal'> </b>False; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Graph.Circle(X, Y,
Radius); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Graph.SetColor(TempColor);
<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>procedure</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Circle.Expand(ExpandBy : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Hide; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Radius :=Radius +
ExpandBy; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>if Radius &lt;0 then
Radius :=0; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Show; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>procedure</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Circle.Contract(ContractBy : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Expand(-ContractBy); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>end</i></b><i style='mso-bidi-font-style:
normal'>; <o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'>{раздел инициализации}<o:p></o:p></i></p>

<p class=spase><span style='mso-spacerun:yes'> </span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>begin</i></b><i style='mso-bidi-font-style:normal'><o:p></o:p></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>end.</i></b><i style='mso-bidi-font-style:normal'><o:p></o:p></i></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>В модули, которые написаны с применением обычной процедурной
технологии, нельзя вносить изменения, если не принимать во внимание возможности
изменений в его исходном тексте с последующей перекомпиляцией. Относительно
таких модулей как, например, <i style='mso-bidi-font-style:normal'>Figures</i>,
важным представляется то, что их функциональные свойства могут <i
style='mso-bidi-font-style:normal'>дополняться</i> без изменения исходного
текста. Для этого пользователю достаточно иметь информацию о интерфейсном
разделе (например, его распечатку) и смысловую спецификацию полей и методов
описанных в модуле объектов. Используя полиморфные объекты и виртуальные правила,
пользователь имеет возможность расширять модуль с учетом требуемых ему
собственных функциональных свойств. </p>

<p class=MsoNormal>Это новое понятие, заключающееся в пополнении функций без
изменений исходного кода, носит название <i style='mso-bidi-font-style:normal'>расширяемости</i>
или открытости. </p>

<p class=MsoNormal>Расширяемость, собственно, обусловлена наследованием и
полиморфизмом (позднее связывание позволяет “учитывать дополнения” во время
выполнения программы, так что расширение существующего модуля никак не связано
с его изменением).</p>

<p class=MsoNormal><span style='mso-tab-count:1'>      </span>Следующая
программа использует модуль <i style='mso-bidi-font-style:normal'>Figures</i>,
и расширяет его, дополняя новым объектом графической фигуры <i
style='mso-bidi-font-style:normal'>Arc</i> (дуга). <i style='mso-bidi-font-style:
normal'>Arc</i> является производным типом от объекта <i style='mso-bidi-font-style:
normal'>Circle</i> и наследует методы <i style='mso-bidi-font-style:normal'>MoveTo</i>
или <i style='mso-bidi-font-style:normal'>Drag</i> без каких-либо особых изменений.
Позднее связывание позволяют методу <i style='mso-bidi-font-style:normal'>Drag</i>
вызывать виртуальные методы <i style='mso-bidi-font-style:normal'>Show</i> и <i
style='mso-bidi-font-style:normal'>Hide</i> объекта<i style='mso-bidi-font-style:
normal'> Arc</i> вне зависимости от того, когда был откомпилирован <i
style='mso-bidi-font-style:normal'>Point.Drag</i>: </p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-indent:14.2pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>program</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> FigureDemo; {</span>расширение</i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Figures </span>типом</i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'> Arc}<o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>uses</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Crt, DOS, Graph, Figures;<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>type <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Arc = <b
style='mso-bidi-font-weight:normal'>object</b>(Circle) <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>StartAngle, EndAngle :
Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='letter-spacing:-.2pt;mso-ansi-language:EN-US'>constructor</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='letter-spacing:-.2pt;
mso-ansi-language:EN-US'> Init (InitX, InitY: </span></i><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Integer<span
style='letter-spacing:-.2pt'>; InitRadius: </span>Integer<span
style='letter-spacing:-.2pt'>;<o:p></o:p></span></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='letter-spacing:-.2pt;mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>                        </span>InitStartAngle,
InitEndAngle : </span></i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'>Integer<span style='letter-spacing:
-.2pt'>); <o:p></o:p></span></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Show; <b
style='mso-bidi-font-weight:normal'>virtual</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Hide; <b
style='mso-bidi-font-weight:normal'>virtual</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:2.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>end;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>var <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>GraphDriver :<b
style='mso-bidi-font-weight:normal'> </b>Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>GraphMode : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>ErrorCode : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>AnArc : Arc; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>ACircle : Circle; <o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'>{Определение методов
объекта Arc}<o:p></o:p></i></p>

<p class=spase><span style='mso-spacerun:yes'> </span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>constructor</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Arc.Init(InitX, InitY : Integer; InitRadius : Integer;<o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>                            </span>InitStartAngle,
InitEndAnle : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Circle.Init(InitX, InitY,
InitRadius); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>StartAngle
:=InitStartAngle; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>EndAngle
:=InitEndAngle; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>   </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Arc.Show; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible :=True; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Graph.Arc(X, Y,
StartAngle, EndAngle, Radius); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Arc.Hide; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>var <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>TempColor : Word; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>TempColor :=Graph.GetColor;
<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Graph.SetColor(GetBkColor);
<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible :=False; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Graph.Arc(X, Y,
StartAngle, EndAngle, Radius); {p</span>исует</i><i style='mso-bidi-font-style:
normal'><span style='mso-ansi-language:EN-US'> </span>дугу</i><i
style='mso-bidi-font-style:normal'><span style='mso-ansi-language:EN-US'> </span>в</i><i
style='mso-bidi-font-style:normal'><span style='mso-ansi-language:EN-US'> </span>цвете</i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>                                                    
</span></span>заднего фона для ее скрытия}<o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>SetColor(TempColor); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>{</span>Тело</i><i style='mso-bidi-font-style:
normal'><span style='mso-ansi-language:EN-US'> </span>программы</i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>}<o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>begin </span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>GraphDriver := Detect;
{</span>определение</i><i style='mso-bidi-font-style:normal'><span
style='mso-ansi-language:EN-US'> </span>типа</i><i style='mso-bidi-font-style:
normal'><span style='mso-ansi-language:EN-US'> </span>монитора</i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>} <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>InitGraph(GraphDriver,
GraphMode,''); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>if</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> GraphResult &lt;&gt;
GrOK <b style='mso-bidi-font-weight:normal'>then</b> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:42.55pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>WriteLn('Halted on
graphics error:'); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:42.55pt'><i style='mso-bidi-font-style:
normal'>Halt(1) <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>end</i></b><i style='mso-bidi-font-style:
normal'>; <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'>{Все потомки от типа Point содержат виртуальные правила и должны <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span style='mso-spacerun:yes'> </span>быть инициализированы вызовом
конструктора}<span style='mso-spacerun:yes'>  </span><o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>ACircle.Init(151, 82,
50); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>AnArc.Init(151, 82,
25, 0, 90); <o:p></o:p></span></i></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:1.0cm'><i
style='mso-bidi-font-style:normal'><span style='letter-spacing:-.4pt'>{AnArc
заменяется экземпляром AnCircle для буксировки круга вместо дуги. <o:p></o:p></span></i></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:1.0cm'><i
style='mso-bidi-font-style:normal'><span style='letter-spacing:-.2pt'>Нажать
ENTER для остановки буксировки и завершения программы} <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>AnArc.Drag(5); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>CloseGraph; <o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>end.</i></b><i style='mso-bidi-font-style:normal'><span
style='mso-spacerun:yes'>    </span><o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Свойство расширяемости является основой для создания мощных
библиотек, которые сами могут рассматриваться как дополнение инструментария
языка. Примерами таких библиотек являются <i style='mso-bidi-font-style:normal'>Turbo
Vision</i> или, в последних версиях, <i style='mso-bidi-font-style:normal'>Pascal
Object Librar</i><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>y</span></i>. Однако, свойство расширяемости
вступает в некоторые противоречия с эффективностью программ, написаных с применением
ООП-технологии.<span style='mso-tab-count:1'>              </span>Эти
противоречия вызваны необходимостью выбора раннего или позднего связывания при
описании методов. В общем, предпочтение следует отдавать виртуальным методам.
Статические методы можно использовать в тех случаях, когда требуется достичь
большей скорости и эффективности использования памяти. Справедливости ради,
следует заметить, что выигрыш здесь будет небольшим (потери при позднем
связывании определяются необходимостью “обработки” VMT), а дополнительная
скорость и эффективность использования памяти, которую <span style='letter-spacing:
-.2pt'>дают статические правила, компенсируются гибкостью полиморфных объектов.<o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:35.4pt;text-indent:-14.15pt;mso-list:
l1 level1 lfo8'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='mso-fareast-font-family:Baltica;mso-bidi-font-family:Baltica'><span
style='mso-list:Ignore'>8.5. </span></span></b><![endif]><b style='mso-bidi-font-weight:
normal'>Динамические объекты <o:p></o:p></b></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Все примеры объектов, рассматриваемые до сих пор, имели
статические экземпляры (термин &quot;статический&quot;здесь имеет смысл в
контексте понятия “переменная” и не имеет никакого отношения к статическим правилам).</p>

<p class=MsoNormal>Экземпляры объктного типа, подобно переменным, могут
размещаться в динамической области (<i style='mso-bidi-font-style:normal'>heap</i>).
В этом случае принято говорить о <i style='mso-bidi-font-style:normal'>динамических
</i>объектах. Кроме того, объектный тип можно использовать в качестве компонент
динамических (рекурсивных) структур данных, если среди полей данных
предусмотрено поле, которое является ссылкой на этот же тип объекта.</p>

<p class=MsoNormal>Согласно общим правилам для динамически размещаемых
переменных новый экземпляр объекта размещается в памяти с помощью процедуры <i
style='mso-bidi-font-style:normal'>New</i>. При этом в динамической области (<i
style='mso-bidi-font-style:normal'>heap</i>) выделяется место для экземпляра, и
указателю-параметру <i style='mso-bidi-font-style:normal'>New</i> возвращается
соответствующий этому месту адрес, например:</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>type <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Location =<b
style='mso-bidi-font-weight:normal'>object </b><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:3.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>X, Y : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:3.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Init(InitX, InitY : </span></i><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>Integer</span></b><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'>); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:3.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> GetX : Integer;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:3.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>function</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> GetY : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:78.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end;<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></b></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>PointPtr =^Point;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Point =<b
style='mso-bidi-font-weight:normal'>object</b>(Location); <o:p></o:p></span></i></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>  </span><span style='mso-spacerun:yes'> </span>. . .<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>var<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>PPoint : PointPtr;<o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>begin<o:p></o:p></span></i></b></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'> </span><b
style='mso-bidi-font-weight:normal'>new</b> (PPoint);<o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span></span>.
. .<o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=remarc>Если динамический объект содержит виртуальные методы, он затем
должен быть обязательно инициализирован с помощью вызова <b style='mso-bidi-font-weight:
normal'>конструктора</b> до того, как делаются любые вызовы его методов, т. е.
способ инициализации полиморфного объекта остается прежним.<span
style='mso-spacerun:yes'>  </span></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Вызов методов объекта затем может быть выполнен обычным
способом, посредством указателей или ссылок, которые заменяют имя экземпляра,
например:</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='mso-spacerun:yes'> </span>Х</i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'>Position :=PPoint ^.GetX; <o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoNormal>Однако, синтаксис процедуры <i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>n</span>ew</i>
применительно к динамическим объектам в <i style='mso-bidi-font-style:normal'>Borland
Pascal</i> существенно расширен (в том числе и по отношению к расширениям,
описанным в разделе 7), что позволяет выделять <i style='mso-bidi-font-style:
normal'>полиморфному</i> объекту требуемое место в динамической области и
инициализировать его с помощью одной операции. В расширенной трактовке
процедура <i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>n</span>ew</i> может быть вызвана с двумя
параметрами: именем указателя в качестве первого параметра и вызовом
конструктора в качестве второго. Наример, распределение памяти для объекта <i
style='mso-bidi-font-style:normal'>Circle </i>с последующей его инициализацией
выполняется с помощью вызова:</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>new</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>(PCircle,Init(600, 100, 30));<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal>При этом важно помнить, что конструктор <i style='mso-bidi-font-style:
normal'>Init</i> фактически выполняет только динамическое распределение памяти.
Имя экземпляра <i style='mso-bidi-font-style:normal'>не может</i>
предшествовать <i style='mso-bidi-font-style:normal'>Init</i>, так как во время
вызова <i style='mso-bidi-font-style:normal'>New</i> инициализируемый с помощью
<i style='mso-bidi-font-style:normal'>Init</i> экземпляр еще не существует.
Компилятор идентифицирует правило <i style='mso-bidi-font-style:normal'>Init</i>
посредством <i style='mso-bidi-font-style:normal'>типа</i> указателя, передаваемого
в качестве первого параметра, а не его значения, определяя тем самым только
объем требуемой памяти для размещения полиморфного объекта. </p>

<p class=MsoNormal>Более того, процедура <i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'>n</span>ew</i> в расширенной
трактовке может использоваться как функция, возвращающая значения указателя, т.
е. возможны присваивания вида:</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>type <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>ArcPtr =^Arc;<o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>var</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>PArc : ArcPtr;<o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>begin<span
style='mso-spacerun:yes'>  </span></span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>PArc :=New(ArcPtr);<o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:0cm'>или<span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>PArc :=<b style='mso-bidi-font-weight:normal'>new</b>(ArcPtr,
Init(600, 100, 25, 0, 90));<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal>Для очистки памяти, которая была распределена под
“использованные” динамические объекты, традиционно применяется процедура <i
style='mso-bidi-font-style:normal'>Dispose</i>. Обычно вызов процедуры <i
style='mso-bidi-font-style:normal'>Dispose</i> осуществляется оператором вида<i
style='mso-bidi-font-style:normal'> Dispose(PMyObject)</i>, где <i
style='mso-bidi-font-style:normal'>PMyObject </i>– указатель на использованный
динамический объект.</p>

<p class=MsoNormal>Однако, подобный вызов применим только к объектам, методы
которого предполагают<span style='mso-spacerun:yes'>  </span>раннее связывание
(описаны как статические). <span style='letter-spacing:-.2pt'>Для полиморфных
объектов освобождаемый объем памяти не является постоянной величиной и
определяется с помощью одной из строк таблицы VMT</span><span style='font-size:
8.0pt;mso-bidi-font-size:10.0pt;letter-spacing:-.2pt'> (</span><span
style='letter-spacing:-.2pt'>см. Рис.8.2<i style='mso-bidi-font-style:normal'>.</i>)</span><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt;letter-spacing:-.2pt'> <o:p></o:p></span></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=remarc>При необходимости очистить память, ранее распределенную под
полиморфный объект, процедуре Dispose необходимо “сообщить”, сколько байт
динамической области очистить. Во время компиляции информация о размере
полиморфного объекта отсутствует. В таблице VMT для каждого типа объекта
имеется размер требуемой для его размещения памяти и вариант этой таблицы
становится доступным, благодаря параметру Self, значение которого
устанавливается конструктором.</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Более того, полиморфный объект может содержать указатели на
динамические структуры или объекты, которые необходимо освободить или
&quot;стереть&quot; в определенном порядке, особенно в случае, когда объект
оперирует с другими сложными структурами данных. Все, что необходимо для
стирания динамического объекта, должно быть собрано вместе, в <i
style='mso-bidi-font-style:normal'>одном методе</i>, чтобы объект мог быть
устранен одним его вызовом. Для таких методов обычно используется имя<i
style='mso-bidi-font-style:normal'> Done</i>. Иными словами, метод <i
style='mso-bidi-font-style:normal'>Done</i> должен инкапсулировать все детали
стирания объекта и все структуры данных и объекты, вложенные в него. Допустимо
и иногда удобно определять несколько методов, определяющих способы стирания
данного типа объекта в зависимости от того, как они размещаются и используются,
или же в зависимости от того, в каком состоянии находится объект, когда
осуществляется его уничтожение из динамической памяти. </p>

<p class=MsoNormal>Подобно конструкторам в <i style='mso-bidi-font-style:normal'>Borland
Pascal</i> для этого случая предусмотрен особый вид методов, которые называются
<i style='mso-bidi-font-style:normal'>деструкторами</i>. Деструктор описывается
в списке методов типа объекта с помощью зарезервированного слова <i
style='mso-bidi-font-style:normal'>destructor</i>, например:<span
style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>Point =<b style='mso-bidi-font-weight:normal'>object</b>(Location)
<o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>Visible :<b style='mso-bidi-font-weight:normal'>
</b>Boolean; <o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>constructor</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Init(InitX, InitY : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>destructor</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> Done; <b style='mso-bidi-font-weight:normal'>virtual</b>;<o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>. . . <o:p></o:p></i></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>en</i></b><i style='mso-bidi-font-style:normal'>d;<span
style='mso-spacerun:yes'>   </span><o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span style='mso-tab-count:1'>      </span>Для одного типа
объекта могут быть определены несколько деструкторов. Деструкторы могут
наследоваться и определяться либо статическими, либо виртуальными, причем
последнее предпочтительней.</p>

<p class=MsoNormal>Зарезервированное слово <i style='mso-bidi-font-style:normal'>destructor</i>
не является необходимым для каждого метода очистки, даже если определение типа
объекта содержит виртуальные правила. Фактически деструкторы “работают” только
с динамически распределяемыми объектами. Но описание деструкторов в списке
методов для статически распределенных объектов вреда не принесет, а отсутствие
деструкторов исключает возможность использовать такие объекты в качестве
динамических. </p>

<p class=MsoNormal>Для очистки памяти, распределенной под “использованный”
динамический объект, деструктор должен быть вызван как параметр процедуры <i
style='mso-bidi-font-style:normal'>Dispose</i>, что соответствует ее
расширенной трактовке применительно к динамическим объектам:</p>

<p class=spase><span style='mso-spacerun:yes'> </span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>Dispose(PPoint,Done);<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span><o:p></o:p></span></p>

<p class=MsoNormal>При этом деструктор определяет размер освобождаемой памяти в
VMT данного типа экземпляра и передает этот размер процедуре <i
style='mso-bidi-font-style:normal'>Dispose</i>. Процедура завершает очистку,
освобождая соответствующую память. Таким образом, вызов деструктора вне
процедуры <i style='mso-bidi-font-style:normal'>Dispose</i> не выполнит автоматической
очистки памяти. </p>

<p class=MsoNormal>Число освобождаемых байт будет верным вне зависимости от
того, указывает ли <i style='mso-bidi-font-style:normal'>PPoint</i> на
экземпляр типа <i style='mso-bidi-font-style:normal'>Point</i>, или же на один
из производных от <i style='mso-bidi-font-style:normal'>Point</i> типов,
например, <i style='mso-bidi-font-style:normal'>Circle</i> или <i
style='mso-bidi-font-style:normal'>Arc</i>. </p>

<p class=MsoNormal>Тело процедуры, описывающей деструктор, может быть <i
style='mso-bidi-font-style:normal'>пустым</i>, т. е.:</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>destructor</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> MyObject.Done; <o:p></o:p></span></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>begin</i></b><i style='mso-bidi-font-style:normal'> <o:p></o:p></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>end</i></b><i style='mso-bidi-font-style:normal'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-indent:0cm'>и все-таки деструктор будет
выполнять свою задачу. В таком деструкторе существенно не тело правила, а код,
сгенерированный компилятором в ответ на служебное слово <i style='mso-bidi-font-style:
normal'>destructor</i>.</p>

<p class=MsoNormal>Приведенный ниже пример иллюстрирует использование
динамических объектов при формировании связанного списка графических объектов и
последующей его очистки. </p>

<p class=MsoNormal><span style='mso-tab-count:1'>      </span>Для формирования
рекурсивной структуры данных, компоненты которой представлены объектным типом,
необходимо, чтобы список его полей включал поле ссылки. В <i style='mso-bidi-font-style:
normal'>Point</i> такого поля нет. Простым решением было бы доопределить поле
ссылки в описании типа <i style='mso-bidi-font-style:normal'>Point</i>, причем
все производные типы унаследовали бы это поле. Доопределение <i
style='mso-bidi-font-style:normal'>Point</i> возможно, если исходное описание
этого объекта известно.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>      </span>Решение, которое
не требует внесения никаких изменений в описание графических объектов, состоит
в создании нового типа объекта, не являющегося производным от объекта<i
style='mso-bidi-font-style:normal'> Point</i>. Тип <i style='mso-bidi-font-style:
normal'>List</i> (список) – простой объект, назначение которого состоит в определении
указателя на голову списка объектов типа <i style='mso-bidi-font-style:normal'>Point</i>.
В качестве компонент списка теперь можно использовать обычную запись, например,
<i style='mso-bidi-font-style:normal'>Node</i> (узел), полями которой будут
указатель на тип <i style='mso-bidi-font-style:normal'>Point</i> и ссылка <i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>N</span>ext</i>:</p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>. . .<o:p></o:p></span></b></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>NodePtr =^Node; <o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>Node =<b style='mso-bidi-font-weight:normal'>record</b>
<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Item : PointPtr; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Next : NodePtr <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:2.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>end</i></b><i style='mso-bidi-font-style:
normal'>;<span style='mso-spacerun:yes'>  </span><o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Описание типа <i style='mso-bidi-font-style:normal'>List </i>имеет
вид<i style='mso-bidi-font-style:normal'>:<o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>List = <b style='mso-bidi-font-weight:normal'>object
</b><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Nodes: NodePtr; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>constructor</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Init; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>destructor</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Done; <b
style='mso-bidi-font-weight:normal'>virtual</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Add(Item : PointPtr);
<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.8pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Report; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:2.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>      </span><o:p></o:p></span></p>

<p class=MsoNormal>Применительно к объекту <i style='mso-bidi-font-style:normal'>List</i>
интерес в данном примере представляет метод<i style='mso-bidi-font-style:normal'>
Add и </i>деструктор <i style='mso-bidi-font-style:normal'>Done</i>. </p>

<p class=MsoNormal>Метод <i style='mso-bidi-font-style:normal'>Add</i>
позволяет формировать список, помещая новую компоненту в его начало. В
соответствии с определением совместимости объектных типов и указателей,
указатель на любой тип фигуры, производный от <i style='mso-bidi-font-style:
normal'>Point</i>, также может быть передан <i style='mso-bidi-font-style:normal'>List.Add</i>
в параметре <i style='mso-bidi-font-style:normal'>Item</i>:</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>procedure</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> List.Add(Item : PointPtr); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>var </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>N : NodePtr; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>new</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>(N);<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>N^.Item :=Item; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>N^.Next :=Nodes; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Nodes :=N; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:21.3pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>en</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>d;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal>В примере используется статически размещаемый экземпляр объекта
типа <i style='mso-bidi-font-style:normal'>List</i><span
style='mso-spacerun:yes'>  </span>– <i style='mso-bidi-font-style:normal'>Alist
</i>и формируется список с тремя узлами. Каждый узел указывает на отдельную графическую
фигуру, которой является либо объект <i style='mso-bidi-font-style:normal'>Point</i>,
либо один из его производных типов. Затем вся структура, включая три записи <i
style='mso-bidi-font-style:normal'>Node</i> и три объекта типа <i
style='mso-bidi-font-style:normal'>Point</i>, “очищается” и убирается из
динамической области с помощью одного вызова деструктора<i style='mso-bidi-font-style:
normal'> AList.Done </i>:</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>destructor</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> List.Done; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>var </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>N: NodePtr; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>while</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Nodes &lt;&gt; <b
style='mso-bidi-font-weight:normal'>nil do</b> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:1.0cm'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>   </span><b style='mso-bidi-font-weight:normal'><span
style='mso-spacerun:yes'> </span>begin</b> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:49.65pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>N :=Nodes; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:49.65pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Dispose(N^.Item,
Done); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:49.65pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Nodes :=N^.Next;
Dispose(N)<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:35.45pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>end<o:p></o:p></i></b></p>

<p class=MsoNormal style='text-indent:1.0cm'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>end</i></b><i style='mso-bidi-font-style:
normal'>;<span style='mso-spacerun:yes'>  </span><o:p></o:p></i></p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Таким образом список очищается начиная с &quot;головы&quot;.
Вызов <i style='mso-bidi-font-style:normal'>dispose</i> освобождает память,
использованную для размещения первого элемента списка (<i style='mso-bidi-font-style:
normal'>Item^</i>); затем <i style='mso-bidi-font-style:normal'>Nodes</i>
передается следующей компоненте <i style='mso-bidi-font-style:normal'>Node</i>
в списке оператором <i style='mso-bidi-font-style:normal'>Nodes :=N^.Next</i>;
компонента снова освобождается и весь процесс повторяется, пока список не будет
полностью очищен. </p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=remarc>Здесь можно еще раз напомнить, что при вызове деструктора
Dispose(N^.Item, Done) фактический тип N^.Item – не обязательно Point, Он также
может быть любым, производным тип от типа Point. Удаляемый объект является
полиморфным и размер его экземпляра определяется в соответствующей таблице
виртуальных правил.</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>В тексте примера<span style='mso-spacerun:yes'>  </span><i
style='mso-bidi-font-style:normal'>AList</i> является экземпляром статического
объекта. Однако, этот объект можно описать как динамический. В этом случае для
его размещения в <i style='mso-bidi-font-style:normal'>heap</i>-области
понадобиться указатель типа <i style='mso-bidi-font-style:normal'>ListPtr</i>,
а для уничтожения – деструктор <i style='mso-bidi-font-style:normal'>PList,Done</i>,
вызов которого <i style='mso-bidi-font-style:normal'>Dispose(PList,Done)</i>
обеспечит очистку памяти от &quot;головы&quot; списка. </p>

<p class=MsoNormal><span style='mso-tab-count:1'>      </span>Полный текст
примера с дополнительными комментариями приведен ниже; в нем используется уже
известный модуль <i style='mso-bidi-font-style:normal'>Figures</i>, в котором
тип <i style='mso-bidi-font-style:normal'>Arc</i> описан как производный тип от
типа <i style='mso-bidi-font-style:normal'>Point</i>:</p>

<p class=spase><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>program</span></i></b><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'> prim8_1;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:27.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>uses</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Graph, Figures;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:27.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>type <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>ArcPtr = ^Arc; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Arc = <b
style='mso-bidi-font-weight:normal'>object</b>(Circle) <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>StartAngle, EndAngle :
Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>constructor</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Init(InitX, InitY :
Integer; InitRadius : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='margin-left:70.8pt;text-indent:45.0pt'><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>InitStartAngle, InitEndAngle : Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Show; <b
style='mso-bidi-font-weight:normal'>virtual</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Hide; <b
style='mso-bidi-font-weight:normal'>virtual</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>NodePtr = ^Node; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Node = <b
style='mso-bidi-font-weight:normal'>record <o:p></o:p></b></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Item : PointPtr; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Next : NodePtr; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>ListPtr = ^List; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>List = <b
style='mso-bidi-font-weight:normal'>object </b><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Nodes: NodePtr; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>constructor</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Init; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>destructor</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Done;<b
style='mso-bidi-font-weight:normal'>virtual</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Add(Item : PointPtr);
<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Report; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:27.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>var<o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>GraphDriver : Integer;
<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>GraphMode : Integer; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Temp : <b
style='mso-bidi-font-weight:normal'>string</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>AList : List; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Parc : ArcPtr; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>PCircle : CirclePtr; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>RootNode : NodePtr; <o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'>{Процедуры, которые не
являются правилами}<span style='mso-spacerun:yes'>   </span><o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:27.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> OutTextLn(TheText : <b
style='mso-bidi-font-weight:normal'>string</b>); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>OutText(TheText); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>MoveTo(0, GetY + 12) <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:27.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> HeapStatus(StatusMessage
: <b style='mso-bidi-font-weight:normal'>string</b>); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Str(MemAvail : 6,
Temp); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>OutTextLn(StatusMessage
+ Temp); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>end</i></b><i style='mso-bidi-font-style:
normal'>;<span style='mso-spacerun:yes'>   </span><o:p></o:p></i></p>

<p class=spase style='text-indent:27.0pt'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-indent:27.0pt'><i style='mso-bidi-font-style:
normal'>{Реализация методов объекта Arc }<span style='mso-spacerun:yes'>  
</span><o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:27.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>constructor</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Arc.Init(InitX, InitY
: Integer; InitRadius : Integer;<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:27.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>                           </span>InitStartAngle, InitEndAngle
: Integer); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Circle.Init(InitX,
InitY, InitRadius); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>StartAngle :=
InitStartAngle; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>EndAngle :=
InitEndAngle; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:27.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Arc.Show; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible := True; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Graph.Arc(X, Y,
StartAngle, EndAngle, Radius); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:27.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Arc.Hide; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>var </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>TempColor : Word; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>TempColor :=
Graph.GetColor; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Graph.SetColor(GetBkColor);
<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Visible := False; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Graph.Arc(X, Y,
StartAngle, EndAngle, Radius); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>SetColor(TempColor); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>   </span><o:p></o:p></span></i></p>

<p class=spase style='text-indent:27.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:27.0pt'><i style='mso-bidi-font-style:
normal'>{Реализация методов объекта List }<span style='mso-spacerun:yes'>  
</span><o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:27.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>constructor</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> List.Init; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Nodes := <b
style='mso-bidi-font-weight:normal'>nil</b>; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=spase><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:27.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>destructor</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> List.Done; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>var </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>N : NodePtr; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>while</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Nodes &lt;&gt; <b
style='mso-bidi-font-weight:normal'>nil do</b> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:54.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>N := Nodes; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:54.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Dispose(N^.Item,
Done); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:54.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Nodes := N^.Next; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:54.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Dispose(N)<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:27.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> List.Add(Item :
PointPtr); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>var </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>N : NodePtr; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>New(N);<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>N^.Item := Item; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>N^.Next := Nodes; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Nodes := N<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:27.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>procedure</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> List.Report; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>var </span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Current : NodePtr; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin <o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:45.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Current := Nodes; <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>while</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> Current &lt;&gt; <b
style='mso-bidi-font-weight:normal'>nil do</b> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:54.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Str(Current^.Item^.GetX
: 3, Temp);<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>OutTextLn('X =
'+Temp); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Str(Current^.Item^.GetY
: 3, Temp); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>OutTextLn('Y =
'+Temp); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:63.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Current :=
Current^.Next<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:54.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>end<o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>end</i></b><i style='mso-bidi-font-style:
normal'>; <o:p></o:p></i></p>

<p class=spase style='text-indent:27.0pt'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-indent:27.0pt'><i style='mso-bidi-font-style:
normal'>{Тело программы}<span style='mso-spacerun:yes'>   </span><o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:27.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>begin</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>InitGraph(GraphDriver,
GraphMode,''); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>if</span></i></b><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'> GraphResult &lt;&gt;
GrOK <b style='mso-bidi-font-weight:normal'>then <o:p></o:p></b></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>begin<o:p></o:p></i></b></p>

<p class=MsoNormal style='text-indent:54.0pt'><i style='mso-bidi-font-style:
normal'>WriteLn('Остановка при графической ошибке: ',<o:p></o:p></i></p>

<p class=MsoNormal style='margin-left:35.4pt;text-indent:54.0pt'><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>GraphErrorMsg(GraphDriver)); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:54.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>Halt(1); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:45.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>end</i></b><i style='mso-bidi-font-style:
normal'>; <span style='mso-spacerun:yes'> </span><o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'>HeapStatus ('Пространство в куче до распределения списка: ')<span
style='mso-spacerun:yes'>  </span><o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'><span style='mso-spacerun:yes'>   </span>{ Создать список } <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'>AList.Init;<span style='mso-spacerun:yes'>  </span><o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'><span style='letter-spacing:-.4pt'>{создание и пополнение списка
несколькими фигурами за одну операцию}<o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>AList.Add(New(ArcPtr,
Init(151, 82, 25, 200, 330))); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>AList.Add(New(CirclePtr,
Init(400, 100, 40))); <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>AList.Add(New(CirclePtr,
Init(305, 136, 5)));<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>   </span></span>{просмотр списка и определение
координат фигур списка }<o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'>AList.Report; <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'>HeapStatus ('пространство в “куче” после распределения списка: ');<o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'><span style='mso-spacerun:yes'>   </span>{весь список освобждается
одним вызовом деструктора} <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'>AList.Done;<span style='mso-spacerun:yes'>  </span><o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'>HeapStatus (‘пространство в “куче” после очистки списка:');<span
style='mso-spacerun:yes'>  </span><o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'>OutText('Нажмите ВВОД для завершения программы:‘); <o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>ReadLn;<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:36.0pt'><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>CloseGraph <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-indent:27.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'>end.</span></b><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'> 
</span><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:18.0pt'><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>Рекомендации к
упражнениям</b> </p>

<p class=MsoNormal>Расширьте модуль <i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-ansi-language:EN-US'>F</span>igures.</i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>pas</span></i>, дополнив его объектами для линий, прямоугольников,
квадратов, колец и т. п. Создайте круглую круговую диаграмму (в виде пирога с
ломтиками), используя связанный список отдельных фигур–&quot;ломтиков&quot;. </p>

<p class=MsoNormal>Реализуйте объекты с относительным положением. Относительное
положение – это смещение от какой-нибудь основной (базовой) точки, выраженное
либо отрицательной, либо положительной величиной. Точка с относительными координатами
<i style='mso-bidi-font-style:normal'>q,l</i> будет находится на <i
style='mso-bidi-font-style:normal'>q</i> точек растра левее своей базовой точки
и на <i style='mso-bidi-font-style:normal'>l</i> точек вниз от базовой точки.
Относительные положения могут понадобиться при компоновке фигур в более
сложные. </p>

<p class=MsoNormal>Просмотрите свои библиотеки процедур и попробуйте “увидеть”
в них объекты, затем перепишите процедуры в объектной форме. Библиотеки
объектов будет гораздо легче использовать, что обусловлено возможностью
расширения объектов без перекомпиляции предшествующей коллекции.</p>

<p class=MsoNormal>Начните знакомиться с имеющимися библиотеками по
соответствующим руководствам и пытайтесь использовать имеющиеся в них средства
при решении прикладных задач.<span style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal><span style='mso-spacerun:yes'>   </span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>
